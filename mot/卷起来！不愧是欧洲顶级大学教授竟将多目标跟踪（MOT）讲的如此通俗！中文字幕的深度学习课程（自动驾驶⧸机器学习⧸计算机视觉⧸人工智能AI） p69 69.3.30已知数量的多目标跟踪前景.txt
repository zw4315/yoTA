# Detected language: en (p=1.00)

[0.00s -> 5.60s]  Hi. In this video, we're going to wrap up the discussion about tracking a known and constant
[5.60s -> 10.72s]  number of objects. So we will mention some extensions of MHT and we will talk about
[10.72s -> 15.60s]  going from tracking a known and constant number of objects to tracking an unknown and
[15.60s -> 21.60s]  time varying number of objects. First, let's mention some extensions of MHT that are possible
[21.60s -> 27.28s]  but are outside the scope of this course. So when we presented gating, we saw that it could
[27.28s -> 33.68s]  be used to group the objects and measurements into smaller subsets. In MHT, this idea can be
[33.68s -> 39.12s]  used to group the objects and measurements such that they are not just treated independently
[39.12s -> 45.28s]  when we deal with the data association, but we actually run several different MHTs,
[45.28s -> 51.28s]  one for each group. The benefit of this is that MHT for a smaller number of objects and
[51.28s -> 57.52s]  measurements has a lower computational cost and we can also run the different MHTs in parallel.
[58.08s -> 64.64s]  However, doing this can become a bit complicated when previously independent objects,
[64.64s -> 68.88s]  so that's objects that belong to different groups, when they begin to interact,
[68.88s -> 73.84s]  in other words, when they no longer can be gated into separate groups. It can also be
[73.84s -> 78.40s]  complicated dealing with groups that begin to separate into different groups because this
[78.48s -> 84.72s]  could require splitting the MHT into different parts. Another extension of MHT is called
[84.72s -> 92.48s]  n-scan MHT. In this case, the data association for the latest n time steps is formulated as a
[92.48s -> 98.40s]  constrained optimal assignment problem, somewhat similarly to how we formulated an optimal
[98.40s -> 103.76s]  assignment problem for the current time step. And when we do this, it's typical to not have
[103.84s -> 110.80s]  an explicit lookup table, but instead we have hypothesis trees and then we find only the optimal
[110.80s -> 117.12s]  n-scan association. And this means that it's possible to implicitly represent an enormous
[117.12s -> 122.96s]  amount of global hypotheses. So the natural extension of tracking a known and constant
[122.96s -> 128.24s]  number of objects is to consider an unknown and time varying number of objects. So a good
[128.24s -> 135.76s]  question is, can we actually extend GNN, JPDA and MHT as they have been presented here to handle
[135.76s -> 142.00s]  an unknown and time varying number of objects? Can they be extended to multiple object tracking?
[142.00s -> 148.08s]  And the answer is, perhaps unsurprisingly, that we can do so. It is possible. And as a matter
[148.08s -> 155.52s]  of fact, the original MHT formulation included inference on the number of objects. The reasons
[155.52s -> 160.88s]  that we restricted ourselves in this course to MHT for a known number of objects are mainly
[160.88s -> 165.76s]  that we wanted to keep things simple. We wanted to increase the complexity of the problem
[165.76s -> 172.00s]  formulation gradually. So adapting to an unknown number of objects requires some methods for
[172.00s -> 177.76s]  so-called track initiation and track deletion, which is the handling of when objects appear
[177.76s -> 183.04s]  and when they disappear. Some methods for this that can be found in MOT literature are,
[183.04s -> 189.76s]  for example, score based method and M over N logic. And generally, there's a lot of empirical
[189.76s -> 196.16s]  evidence that measurement driven object initiation works well. However, we're not going to extend
[196.16s -> 203.44s]  GNN, JPDA and MHT in this way. Instead, we're going to use a powerful set of modeling tools
[203.44s -> 210.80s]  called random finite sets in order to model MOT. And then we're going to show how MOT algorithms
[210.88s -> 217.20s]  can be derived using this RFS modeling. Okay, that's all we had about tracking a
[217.20s -> 221.92s]  known number of objects. Now you can go ahead and work on some of the quiz questions
[221.92s -> 223.60s]  and the assignments.
