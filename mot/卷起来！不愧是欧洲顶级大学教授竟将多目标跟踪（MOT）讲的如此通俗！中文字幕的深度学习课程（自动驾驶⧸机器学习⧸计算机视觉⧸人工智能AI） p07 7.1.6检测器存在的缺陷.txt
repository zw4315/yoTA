# Detected language: en (p=1.00)

[0.00s -> 3.72s]  First, we have mist detections.
[3.72s -> 8.52s]  A mist detection is when an object inside the field of view is not detected.
[8.52s -> 11.96s]  We can illustrate this by the example on the right here.
[11.96s -> 16.26s]  There are two objects in the field of view, a car and a pedestrian.
[16.26s -> 20.78s]  Now let's assume that the vehicle is detected, but for some reason the pedestrian
[20.78s -> 22.04s]  is not.
[22.04s -> 24.08s]  In this case, we have a mist detection.
[24.08s -> 28.40s]  In other words, the pedestrian has not been seen in the sensor data.
[28.40s -> 33.28s]  Let's also assume that the pedestrian, which has not been detected, is about to step out
[33.28s -> 37.08s]  onto the crosswalk to get to the other side of the road.
[37.08s -> 41.32s]  If the autonomous vehicle is driving forwards, there is an obvious risk of a collision with
[41.32s -> 45.28s]  the pedestrian, which of course is something that we wish to avoid.
[45.28s -> 48.80s]  And you should know that in recent years, self-driving vehicles have been involved
[48.80s -> 51.72s]  in at least one such accident.
[51.72s -> 56.72s]  And in that accident, the system did not succeed in detecting and tracking the pedestrian,
[56.72s -> 59.56s]  and tragically, the outcome was fatal.
[59.56s -> 64.66s]  So as we see from this example, mist detections are an important problem.
[64.66s -> 67.92s]  There are several different reasons for mist detections.
[67.92s -> 72.20s]  It could be due to the environmental conditions, such as fog or poor lightning.
[72.20s -> 76.92s]  If the fog is dense, a camera might fail to detect objects unless they are quite close
[76.92s -> 78.38s]  to the sensor.
[78.38s -> 81.20s]  And it could also be due to properties of the object.
[81.20s -> 86.52s]  For example, in defense applications, aircraft are often designed such that they will be
[86.52s -> 89.60s]  difficult to detect using radar.
[89.60s -> 92.44s]  And another reason for mist detections is occlusions.
[92.44s -> 96.88s]  A pedestrian standing on the side of the road about to cross to the other side could
[96.88s -> 99.50s]  be occluded by a parked vehicle.
[99.50s -> 104.36s]  Of course, it's not always the case that a mist detection has catastrophic consequences.
[104.36s -> 109.50s]  But a possible worst case scenario is that a mist detection contributes to an accident
[109.50s -> 111.32s]  with fatal outcome.
[111.32s -> 115.26s]  And because of this, it is very important that we design our multiple object tracking
[115.26s -> 118.78s]  algorithms keeping mist detections in mind.
[118.78s -> 123.78s]  That is, we need to model the possibility of mist detections in our algorithms.
[123.78s -> 127.62s]  The second aspect of imperfect detectors is false detections.
[127.62s -> 131.86s]  That's when a detector gives a detection despite the fact that there is not an actual
[131.86s -> 133.04s]  object there.
[133.04s -> 139.12s]  In object tracking literature, false detections are also called false alarms or clutter.
[139.12s -> 143.34s]  There are a few different reasons for why we might get false detections.
[143.34s -> 147.34s]  When radars are used, it can be because something in the background reflects enough
[147.34s -> 151.40s]  signal energy to exceed the radar detector's threshold.
[151.40s -> 155.42s]  If we're using a camera and a detector, we might get false detections because there's
[155.42s -> 160.44s]  something in the background that looks like an object of interest, but is in fact not.
[160.44s -> 163.90s]  Or it could be because of some other environment condition.
[163.90s -> 170.14s]  So let's illustrate this, why false detections are important to take into consideration.
[170.14s -> 174.94s]  On the right, we have again a self-driving vehicle, but in this case, there's no pedestrian
[174.94s -> 177.06s]  that is about to cross the road.
[177.06s -> 180.86s]  Now let's assume that the vehicle in the opposing lane is detected.
[180.86s -> 185.90s]  However, for some reason, we also get a false detection right in front of the vehicle.
[185.90s -> 191.22s]  The autonomous car does not know which detection is correct and which is false, but it
[191.22s -> 196.14s]  has to act upon the information that it has, which is these two detections.
[196.14s -> 201.18s]  So the detection right in front of the autonomous vehicle indicates that there might be something
[201.18s -> 204.32s]  there, and we don't want to collide with this thing.
[204.32s -> 208.56s]  The autonomous car cannot veer off to the left into the opposing lane, since there
[208.56s -> 209.90s]  is a car there.
[209.90s -> 213.22s]  Instead, it could turn right going off the road.
[213.22s -> 219.14s]  Perhaps the car would just end up in the ditch, or worst case, it might hit the tree,
[219.14s -> 221.66s]  which could have much worse consequences.
[221.66s -> 228.06s]  So similarly to missed detections, a worst case scenario is that a false detection contributes
[228.06s -> 229.06s]  to a fatal outcome.
[229.06s -> 234.20s]  Now, of course, there are tracking applications in which false detections are not catastrophic
[234.20s -> 237.04s]  like this, but rather just annoying.
[237.04s -> 241.78s]  But in either case, it's important that the possibility of false detections is modeled
[241.78s -> 243.86s]  in the multiple object tracking algorithms.
