# Detected language: en (p=1.00)

[0.00s -> 11.00s]  Single object motion modeling describes how the tracked objects move, that is, how the object state evolves over time, from the state at time k to the state in the next time step, k plus one.
[11.00s -> 21.00s]  Let's consider an illustration with an autonomous car that's driving on a road, and there are also some other cars and some pedestrians on the side of the road.
[21.00s -> 33.00s]  The single object motion modeling is a description of how each of these objects move, the direction they're heading in, how fast they're going or their speed, and also whether or not the objects are turning.
[33.00s -> 48.00s]  And it's really important to be able to predict the motion of the objects accurately, because in some applications, such as self-driving vehicles, we have to make decisions based on where we predict the tracked objects to be in the near future.
[48.00s -> 60.00s]  For example, if the car in the opposing lane would be turning across the ego vehicle's lane, or if a pedestrian were to step out onto the road, we would need to act accordingly to avoid a collision.
[60.00s -> 64.00s]  Motion modeling is also very important for the data association.
[65.00s -> 78.00s]  If we can predict where the tracked object is going to be in the next time step, it will make it easier for us to make decisions regarding the data association, so which measurement belongs to the particular object.
[78.00s -> 84.00s]  This is going to be made more clear in later lectures when we study the data association problem in detail.
[84.00s -> 99.00s]  Some common single object motion models, which you should be familiar with already, are linear models, such as the constant velocity model and the constant acceleration model, and also nonlinear models, such as the coordinated turn model.
[99.00s -> 108.00s]  In multiple object tracking, it's common that different types of motion or different types of objects require different types of motion modeling.
[108.00s -> 116.00s]  So, for example, if we consider autonomous vehicles, then we need to model the motion of all other cars.
[116.00s -> 126.00s]  And to do this, the motion of a car that's driving straight ahead can often be accurately described by, for example, a constant velocity or a constant acceleration motion model.
[126.00s -> 132.00s]  But if a car is making a turn, the motion might be better described by a coordinated turn motion model.
[132.00s -> 140.00s]  So there's no simple answer to the question, which type of single object motion model should you use in multiple object tracking?
[140.00s -> 144.00s]  It depends very much on the specific tracking application.
[144.00s -> 151.00s]  In general, in multiple object tracking, we describe the motion of an object using motion models with additive noise.
[151.00s -> 164.00s]  The object state at time k is given by a motion function f that takes the previous state x at time k minus 1 as input, and then we have some additive noise at time k minus 1.
[164.00s -> 169.00s]  In multiple object tracking, we often describe this using a transition density.
[169.00s -> 176.00s]  So a density for the object state at time step k given the object state at time k minus 1.
[177.00s -> 182.00s]  So let's consider an example where we have a constant velocity motion model.
[182.00s -> 187.00s]  We have the state at time k, and it consists of position and velocity.
[187.00s -> 193.00s]  In this case, a suitable motion function would be the following that you can see here on the screen.
[193.00s -> 203.00s]  The position at time k is given by the position at time k minus 1 plus the sampling time t multiplied by the velocity at time k minus 1.
[203.00s -> 205.00s]  And then we add some noise to this.
[205.00s -> 215.00s]  Since we have a constant velocity motion model, the velocity at time k is given simply by the velocity at the previous time step k minus 1 plus some noise.
[215.00s -> 221.00s]  So let's consider an example where we have Gaussian distributed process noise.
[221.00s -> 228.00s]  We assume it has a probability density function that is Gaussian with mean zero and covariance q.
[228.00s -> 233.00s]  With a motion model with additive noise, we get a Gaussian transition density.
[233.00s -> 248.00s]  So the density of the state at time k given the state at time k minus 1 is a Gaussian pdf with mean given by the motion function f with the previous state as input and a covariance q.
