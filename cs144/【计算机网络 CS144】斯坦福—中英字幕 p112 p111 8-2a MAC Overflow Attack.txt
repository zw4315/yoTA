# Detected language: en (p=1.00)

[0.00s -> 5.80s]  In this video, I'm going to show you a demo of a Mac overflow attack.
[5.80s -> 11.36s]  In the demo, Eve the attacker is going to eavesdrop on Alice's traffic to Bob, even
[11.36s -> 15.32s]  though Alice and Eve are not connected to the same switch.
[15.32s -> 19.52s]  As you'll remember, and just as we saw in the last video, Eve is going to send
[19.52s -> 24.22s]  lots of Ethernet packets with new addresses to force the forwarding tables in the switches
[24.22s -> 30.38s]  to overflow, so that Alice's traffic to Bob is going to be broadcast.
[30.38s -> 35.06s]  Eve will then be able to eavesdrop and listen in on the traffic.
[35.06s -> 39.60s]  Let's see how this works.
[39.60s -> 43.98s]  The demo I'm going to show you next runs on the Mininet emulation system, which means
[43.98s -> 47.46s]  you can easily and safely run it yourself on your own computer, and I'll tell you
[47.46s -> 49.66s]  shortly how you do that.
[49.66s -> 54.70s]  It also means the same code can easily be replicated into a real network.
[54.70s -> 55.98s]  The demo was created by T.Y.
[55.98s -> 58.42s]  Feinger, a PhD student here at Stanford.
[58.42s -> 64.62s]  First, let's verify that under normal conditions, Eve can't eavesdrop on Alice.
[64.62s -> 70.86s]  There are three windows on the screen representing Alice, Bob, and Eve at the bottom.
[70.86s -> 75.22s]  Alice is sending pings to Bob while Eve is running TCP dump on her machine, listening
[75.22s -> 79.36s]  for traffic from Alice's IP address, 10.0.0.1.
[79.36s -> 83.42s]  As you can see, TCP dump doesn't capture any traffic, and Eve doesn't hear anything
[83.42s -> 87.64s]  at all, so we know the learning mechanism is working just fine, and no traffic is being
[87.64s -> 89.48s]  broadcast.
[89.48s -> 95.24s]  Next, Eve runs an attack in which she overwhelms the network with new, randomly generated
[95.24s -> 97.02s]  Ethernet addresses.
[97.02s -> 101.28s]  The switch dutifully learns them all until its forwarding table fills up and overflows,
[101.28s -> 105.12s]  evicting the learned Ethernet address of Alice's server.
[105.32s -> 108.80s]  Alice is still sending pings to Bob, and they're now being broadcast.
[108.80s -> 112.40s]  The TCP dump running on Eve's machine can see the packets and reports them on
[112.40s -> 113.40s]  the screen.
[113.40s -> 117.44s]  It doesn't see all of them, because occasionally the switch will successfully learn Alice's
[117.44s -> 118.44s]  address.
[118.44s -> 122.56s]  But it's quickly evicted again because of the onslaught of new Ethernet packets from
[122.56s -> 125.48s]  Eve.
[125.48s -> 129.84s]  When Eve stops generating new Ethernet addresses, the switch re-learns Alice's Ethernet address,
[129.84s -> 134.16s]  and it can stop broadcasting the traffic between Alice and Bob.
[134.20s -> 138.04s]  That way, Eve will no longer be able to hear their traffic.
[138.04s -> 141.40s]  If you'd like, you can reproduce this demo yourself by downloading the Mininet script
[141.40s -> 145.48s]  from the URL at the bottom of the screen, and then just simply run it in a Mininet
[145.48s -> 146.80s]  instance on your computer.
