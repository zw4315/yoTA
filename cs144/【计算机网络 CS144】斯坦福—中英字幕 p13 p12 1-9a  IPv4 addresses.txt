# Detected language: en (p=1.00)

[0.00s -> 4.00s]  The Internet Protocol allows two computers to exchange messages across a network that's
[4.00s -> 9.16s]  built up out of many different link layers. It does so through addresses. An IP packet
[9.16s -> 14.64s]  has a source and a destination address. Routers decide which link to forward a packet
[14.64s -> 19.52s]  based on the packet's destination address. Let's look in detail what IP version 4
[19.52s -> 23.72s]  addresses look like, how they are formatted, and how they are allocated.
[23.72s -> 27.28s]  The original goal of the Internet Protocol was to take many different networks and
[27.28s -> 31.96s]  stitch them together. For this to work, the protocol needed a way to refer to a computer
[31.96s -> 36.64s]  that was independent of the network it was on and was unique. So a computer on an IBM
[36.64s -> 41.00s]  network and a computer connected to a router or a serial line can talk to each other and
[41.00s -> 45.44s]  need a way to address each other. Today, IPv4 addresses are a bit more complicated.
[45.44s -> 49.04s]  They're not totally unique due to a bunch of special cases and uses, but for now let's
[49.04s -> 55.16s]  just assume that they're unique. An Internet Protocol version 4 address is 32 bits long.
[55.16s -> 61.88s]  These 32 bits are often written as 4 octets, that is 4 8-bit values in the form a.b.c.d.
[61.88s -> 74.12s]  Here are three examples, 171.64.64.64, 128.30.76.82, and 12.22.58.30.
[74.12s -> 80.00s]  Every device connected through IPv4 has an IPv4 address. The IP layer delivers packets
[80.00s -> 84.36s]  whose destination is this address to that device.
[84.36s -> 89.72s]  In addition to an address, a device typically also has something called a netmask. A netmask
[89.72s -> 94.88s]  tells you which IP addresses are local, on the same link, on the same network, and which
[94.88s -> 101.00s]  require going through an IP router. For example, think of a laptop on a wireless network.
[101.00s -> 105.16s]  In order to send a packet to another device in the same wireless network, you don't need
[105.16s -> 109.00s]  to go through an IP router. You can, in theory, just send the packet directly to
[109.00s -> 113.12s]  the other device, since it's in the same wireless network.
[113.12s -> 117.72s]  A netmask is written as a string of consecutive ones, starting with the most significant bit.
[117.72s -> 123.76s]  A netmask of 255.255.255.0, for example, means the first three octets are all ones
[123.76s -> 130.60s]  – 2 to the 8th minus 1 is 255 – and the last octet is 0. This means that an
[130.60s -> 134.44s]  IP address which masses the first three octets – 24 bits – of your IP address is
[134.44s -> 144.76s]  on the same network. A netmask of 255.255.252.0 means the netmask is 22 bits long, while 255.128.0.0
[144.76s -> 146.12s]  is a 9-bit netmask.
[146.12s -> 149.76s]  You can tell whether two computers are in the same network by taking a bitwise AND
[149.76s -> 153.88s]  of their addresses with the netmask. If the resulting addresses are equal, they are
[153.88s -> 154.88s]  in the same network.
[154.88s -> 159.36s]  Let's see what this looks like on my computer. I can open up a terminal and use the ifconfig
[159.36s -> 162.80s]  program. My computer is connected to the internet over Wi-Fi, which happens to be the
[162.80s -> 168.12s]  link named EN1. If we look inside the information for EN1, we can see that my internet protocol
[168.12s -> 177.08s]  version 4 address is 192.168.0.106, and my netmask is 0xFFFFFF00, which is hexadecimal
[177.08s -> 183.40s]  for 255.255.255.0. This means that if I send an IP packet to an address beginning
[183.40s -> 189.96s]  with 192.168.0, I should send it directly, but if it doesn't begin with 192.168.0,
[189.96s -> 191.08s]  I need to send it through a router.
