# Detected language: en (p=1.00)

[0.00s -> 9.22s]  Hi, so I'm here with Kevin Fall at the Computer Science Conference at the Symposium on Operating
[9.22s -> 13.92s]  Systems Principles. I was really lucky to run into him here, so I thought that actually
[13.92s -> 19.46s]  hearing a bit about what he has to say about the internet would be interesting.
[19.46s -> 25.10s]  So Kevin, you're currently the author of TCPIP Illustrated, so how did that happen?
[25.10s -> 30.02s]  What's your relationship with TCPIP and stuff that you've done in the past, and what's your
[30.02s -> 32.86s]  background with TCPIP?
[32.86s -> 41.50s]  So I guess when I was, right after I graduated, and shortly after I got to Berkeley somebody
[41.50s -> 46.56s]  demonstrated to me that they could send some packet to Europe and back to Berkeley
[46.56s -> 51.86s]  in under a second. I thought networking became sort of an interesting thing to look at.
[51.86s -> 57.92s]  Fast forward a number of years, I worked on the networking implementation in Berkeley
[57.92s -> 66.26s]  UNIX on a Cray for a while that got me into a little bit of the HPC community. But then
[66.26s -> 72.38s]  I worked at Lawrence Berkeley National Lab after my graduate work at UC San Diego.
[72.38s -> 76.82s]  So at UC San Diego I was doing some protocol work and some operating system work, but then
[76.82s -> 81.98s]  with the networking group at LBL that was all quite a bit in the networking side, and
[81.98s -> 86.96s]  worked in network simulators and the NS simulator and so on.
[86.96s -> 93.46s]  What happened though is I got to know this stuff pretty well, and by the early
[93.46s -> 99.06s]  90s or sort of mid 90s when the internet was becoming more widely known, people took
[99.06s -> 105.26s]  an interest in this, what is this TCPIP stuff. And this particular book, TCPIP Illustrated,
[105.26s -> 111.46s]  was the standard reference text and the volume one is still quite a good book. I was teaching
[111.46s -> 119.18s]  out of it, teaching sort of professionals from industries, Cisco and places like that.
[119.18s -> 123.58s]  And so I got to know the material quite well, but as the years went on and on and
[123.58s -> 129.62s]  on, there were things that it would be nice to be updated in that book. And so I had
[129.62s -> 135.10s]  been at places where I had heard some people were approached to rewrite it, other people
[135.10s -> 142.38s]  approached the editor, or Addison, to rewrite it, and for whatever reason it never happened,
[142.38s -> 148.30s]  so I threw in my table of contents and sample chapter and got the job, and some
[148.30s -> 153.30s]  seven years later finished off the entire task with something that's over a thousand pages long.
[153.30s -> 161.30s]  Well, so what's an example of something that you thought sort of a change needed to be introduced, but wasn't in the original?
[161.50s -> 169.30s]  One of the major ones is security. So there's, I think, a hundred pages of security that goes through
[169.30s -> 174.30s]  the introduction of what are the sort of basic primitives, what are the sort of things you might want to protect against,
[174.30s -> 182.30s]  and then all the various details of the protocols that actually does that. Really, security, not only the cryptographic
[182.30s -> 189.30s]  parts of security, but things like firewalls and stuff really barely existed when the first work was done.
[189.30s -> 194.30s]  There's also a new chapter at the beginning as sort of the architectural underpinnings, which is
[194.30s -> 200.30s]  what was in the minds of people when they were thinking about how the design decisions about this sort of stuff was made.
[200.30s -> 205.30s]  Because I always found that quite interesting, being an operating systems guy originally,
[205.30s -> 211.30s]  how people came up with abstractions and how programs access those things,
[211.30s -> 217.30s]  and not quite users necessarily, but what are the sort of architectural concerns?
[217.30s -> 223.30s]  And so I always was quite interested in papers and thoughts and sort of the architectural area.
[223.30s -> 229.30s]  So last night we were talking and you said that there is, like today people use the terms data ground
[229.30s -> 235.30s]  packet interchangeably, but those were not interchangeable terms. They actually meant something quite different,
[235.30s -> 239.30s]  which now is sort of lost in time.
[239.30s -> 246.30s]  So I think I mentioned this in that part of the book, but packets were sort of a fascinating
[246.30s -> 252.30s]  new concept that you could divide your larger messages into little parts and move them around the network.
[252.30s -> 257.30s]  But they were originally at least some variant were as part of virtual circuits.
[257.30s -> 264.30s]  And so, for example, the destination in a packet was the destination of the index in the table of the next hop.
[264.30s -> 269.30s]  So you would sort of set up the route ahead of time. And then if that failed for some reason,
[269.30s -> 274.30s]  you'd have a bunch of work to do to sort of go back and there's all the history of circuits and so on.
[274.30s -> 280.30s]  But Datagram was maybe even more radical idea in which the destination,
[280.30s -> 285.30s]  the final destination is identified in the packet sort of structure, which the way I was,
[285.30s -> 290.30s]  when I would teach out of this class would say, you know, if I laid out the network in a two dimensional space
[290.30s -> 295.30s]  with this Datagram type property, I could take it and drop it from the air down onto any router.
[295.30s -> 299.30s]  And it would just find its way through because the final destination is listed.
[299.30s -> 303.30s]  But, of course, that was a trade off because now you have more bits that you have to allocate
[303.30s -> 307.30s]  because there's presumably a larger number of possible destinations that might be available.
[307.30s -> 313.30s]  So these were the kind of nuances that were actually pretty neat to sort of get the details from
[313.30s -> 319.30s]  by going back in the architectural history and thinking and learning about what people were sort of arguing at the time.
[319.30s -> 322.30s]  Cool. So what are you working on now?
[322.30s -> 328.30s]  What are some of the most interesting things do you think in networking and the internet and systems?
[328.30s -> 331.30s]  That you're trying to tackle.
[331.30s -> 336.30s]  So there's a couple areas that I think are fun and sort of worth mentioning,
[336.30s -> 339.30s]  at least one of which we have some work on.
[339.30s -> 345.30s]  The first one is just, we don't have so much work on, but is the,
[345.30s -> 350.30s]  and I mentioned to you Licklider and I make reference to that in the book as well,
[350.30s -> 357.30s]  but the, him and some sort of his colleagues and predecessors had envisioned that not only do we have a thing
[357.30s -> 362.30s]  that winds up essentially being today's internet, that there's communication in these communities,
[362.30s -> 366.30s]  but there's also a physical way of moving things around, which is like a global pneumatic tube system.
[366.30s -> 371.30s]  So you could take your thing, shove it, and it would find its way, which would be a very cool thing to have,
[371.30s -> 375.30s]  but I don't think we're quite there yet and I'm not sure we're ever going to really wind up with that.
[375.30s -> 377.30s]  Yeah, they sort of made it possible.
[377.30s -> 379.30s]  It's not quite pneumatic.
[379.30s -> 383.30s]  But on the other hand, I think the sort of 3D printing technology,
[383.30s -> 390.30s]  as combined with what's going on with the sort of free or easy dissemination of information,
[390.30s -> 394.30s]  becomes quite interesting, especially when you can put things other than plastics and so on.
[394.30s -> 402.30s]  So I had in my hand a demonstration that was a titanium 3D printed nose replacement part,
[402.30s -> 410.30s]  prosthetic nose, and it was strands of titanium printed on top of each other,
[410.30s -> 415.30s]  and if you can load up your device with the right materials,
[415.30s -> 421.30s]  pretty much any material thing you want to create almost could be created.
[421.30s -> 427.30s]  So even into the world of sensor networks, people looked at sensing the world,
[427.30s -> 431.30s]  maybe even actuating the world, but building the world on demand in combination with those other things
[431.30s -> 436.30s]  is pretty interesting, and I wonder if that's not kind of the way to get to the vision of pneumatic tubes,
[436.30s -> 439.30s]  but instead of actually moving it, you just make another one.
[439.30s -> 446.30s]  And so how far in the future will it be that you just carry around in your car or your backpack or whatever
[446.30s -> 451.30s]  the basic system, and then you just download whatever the thing is you happen to need?
[451.30s -> 455.30s]  It even goes a little—there was literally, I think it was not a few months ago,
[455.30s -> 460.30s]  there was a meeting in Washington, D.C. about the security implications of additive manufacturing.
[460.30s -> 462.30s]  Well, I mean, there's all those questions about firearms.
[462.30s -> 464.30s]  Yeah, like printing guns and all that.
[465.30s -> 472.30s]  So generally in firearms, if there's one particular piece of a gun that's the one that's strongly regulated,
[472.30s -> 477.30s]  it's the thing that everything has to stick onto, and somebody 3D printed one.
[477.30s -> 479.30s]  It's normally something you need a license for.
[479.30s -> 483.30s]  There's this interesting question about what then the implications are going for,
[483.30s -> 485.30s]  all these kinds of things like DRM.
[485.30s -> 490.30s]  Yeah, and so what is—I think those are—there's lots of policy questions.
[490.30s -> 498.30s]  I think as is often the case, technology will outpace the policy ability to comprehend
[498.30s -> 503.30s]  and sort of instantiate reasonable laws about these things, whatever that may be.
[503.30s -> 509.30s]  And so this idea that bits that become interchangeable with physical objects,
[509.30s -> 513.30s]  and we traditionally have regulated the control of physical objects,
[513.30s -> 515.30s]  but now do we have to—
[515.30s -> 519.30s]  We'll start measuring latency includes the creation time, right?
[519.30s -> 524.30s]  Yeah, so it's pretty interesting, so that set of implications.
[524.30s -> 530.30s]  So that's one of the topics, and actually it gets into other things that you can compute with
[530.30s -> 533.30s]  and maybe print and compute, like synthetic biology.
[533.30s -> 539.30s]  I want to create a little organism that takes one thing and something comes out the other end.
[539.30s -> 543.30s]  Well, if I have biologicals in my 3D printer, I can download that and have the—
[543.30s -> 550.30s]  not just download designs, but have the tools to do the designs of the biological systems.
[550.30s -> 556.30s]  I think the Department of Chemistry is very concerned about these implications.
[556.30s -> 562.30s]  So that's one whole category, I think, that when I was thinking about the pneumatic tube system
[562.30s -> 565.30s]  and then looking at 3D printing and its capabilities,
[565.30s -> 568.30s]  and now the price has gone down, so people can just go get them.
[568.30s -> 570.30s]  It's a pretty interesting thing.
[570.30s -> 573.30s]  Cool. Well, it was great chatting with you, and thank you for your time.
[573.30s -> 574.30s]  Okay, sure.
[574.30s -> 575.30s]  See you next time.
