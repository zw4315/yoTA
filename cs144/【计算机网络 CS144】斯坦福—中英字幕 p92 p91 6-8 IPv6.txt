# Detected language: en (p=1.00)

[0.00s -> 9.00s]  Another kind of IP address is Internet Protocol version six, or IPv6.
[9.00s -> 14.00s]  So recall, the, the purpose of an IPv4 address originally was to allow you to
[14.00s -> 17.00s]  stitch multiple different networks together.
[17.00s -> 22.00s]  So private, provide this globally unique identifier which would be usable
[22.00s -> 27.00s]  across many different networks. But some of the problems that's
[27.00s -> 32.00s]  emerged, especially recently, is that there, the IPv4 address space has only 32
[32.00s -> 35.00s]  bits. So there's only two to the 32 IPv4
[35.00s -> 40.00s]  addresses, or approximately four billion. This seemed tremendous at the time, back
[40.00s -> 45.00s]  when the Internet was 60 nodes. But today, it's actually a limiting
[45.00s -> 48.00s]  factor. Generally, for a variety of reasons,
[48.00s -> 53.00s]  on any kind of numbering scheme like this, you look at telephone numbers,
[53.00s -> 58.00s]  utilization is never going to be 100%. So in fact, utilization of the IPv4
[58.00s -> 62.00s]  address space is around 35%. We're only 35% of the IPv4 addresses
[62.00s -> 66.00s]  that are active at any time. And the challenge here is that if you
[66.00s -> 71.00s]  don't have an IPv4 address, then there's, you know, there isn't a way to
[71.00s -> 75.00s]  communicate with IPv4. You need an IPv4 address, IPv4 address to
[75.00s -> 80.00s]  have IPv4 communication. The other side needs an address to
[80.00s -> 85.00s]  send an IP packet to. And so, realizing there's possibly this
[85.00s -> 90.00s]  shortness this scarcity of IPv4 addresses plus a couple of sort of
[90.00s -> 95.00s]  crafty things that people saw in IPv4. Work started on a new version of the
[95.00s -> 100.00s]  internet protocol in 1994 called IPv6 or Internet Protocol version six.
[100.00s -> 106.00s]  The basic protocol for IPv6 was published in 1998 in RFC 2460.
[106.00s -> 109.00s]  And then, there was a lull for a good while.
[109.00s -> 114.00s]  Well, still, I mean, think 1998. This is, you know, just before a couple
[114.00s -> 119.00s]  of, two years, one year before the first dot com boom and bubble.
[119.00s -> 123.00s]  The internet's taking off, but by no means is the IPv4 address space close
[123.00s -> 127.00s]  to exhaustion. There was a lull of work, but there
[127.00s -> 131.00s]  was an increased interest then in around the 2003, 2006 timeframe.
[131.00s -> 135.00s]  People started to get a better handle as to what were the challenges in IPv4
[135.00s -> 137.00s]  networks. What's important, what's not.
[137.00s -> 142.00s]  How should we use IPv6 addresses based on current work utilization and, and
[142.00s -> 145.00s]  designs. And so today, there's actually a hard
[145.00s -> 150.00s]  push within the IETF as well as several governments to adopt IPv6.
[150.00s -> 156.00s]  You can imagine, especially countries or regions where growth of connectivity is
[156.00s -> 162.00s]  very large, say in China. There, the scarcity of IPv4 addresses
[162.00s -> 167.00s]  is perhaps a greater concern. And so, there's a big push today to get
[167.00s -> 171.00s]  IPv6 deployed in use in the internet as a whole.
[171.00s -> 174.00s]  So, what does an IPv6 address look like?
[174.00s -> 180.00s]  So, IPv6, rather than being limited to 2 to the 32, has 128 bits of
[180.00s -> 184.00s]  address. So, this is absolutely enormous.
[184.00s -> 189.00s]  2 to the 128, so approximately 3.4 times 10 to the 38 addresses.
[190.00s -> 195.00s]  This means that you could have 21 IPv6 addresses per square inch of the world's
[195.00s -> 199.00s]  surface. So, at least with the idea that an
[199.00s -> 204.00s]  IPv6 address is going to name a device as long as we have fewer than
[204.00s -> 209.00s]  21 devices per square inch we'll be able to hold up at least on the earth.
[209.00s -> 214.00s]  Of course, it might well be that these addresses are used for more than that,
[214.00s -> 218.00s]  but but still. And generally speaking, an IPv6 address
[218.00s -> 222.00s]  is separated into two parts. There's the subnet prefec, the subnet
[222.00s -> 227.00s]  prefix, which is of, say, length N, and the interface ID within that subnet, 128
[227.00s -> 231.00s]  minus N bits long. So, think of this similar to a CIDR
[231.00s -> 236.00s]  address or a CIDR class where you have the net mask describing what's the
[236.00s -> 240.00s]  network identifier and then the set of nodes within that.
[240.00s -> 246.00s]  Now, you don't really want to write 128 bit addresses as 16 little octets.
[246.00s -> 252.00s]  Plus, often they have big regions of zeros and repetitions, and so IPv6
[252.00s -> 256.00s]  addresses are written differently than IPv4.
[256.00s -> 264.00s]  Where IPv4 is written as a simple series of period delimited integer values.
[264.00s -> 274.00s]  IPv6 addresses are written in hexadecimal as eight blocks of 16 bits.
[274.00s -> 280.00s]  So here's 16 bits. This is two hexadecimal.
[280.00s -> 284.00s]  There's two zeros, zero, one. And here's the second.
[284.00s -> 289.00s]  There's a, there's a leading zero here, which has been alighted.
[289.00s -> 293.00s]  There's eight zeros, six D, one, colon, colon, nine.
[293.00s -> 298.00s]  If you have a long run of zeros, you can omit a single run of those with colon,
[298.00s -> 301.00s]  colon. So what this is really saying is,
[301.00s -> 306.00s]  here's our first block, here's our second block, here's our third block,
[306.00s -> 310.00s]  here's our fourth block, this is our eighth block.
[310.00s -> 314.00s]  The fifth, sixth, and seventh are all equal to zero.
[314.00s -> 321.00s]  Alright, so if I were to write this address out fully, you'd see 2001, colon,
[321.00s -> 328.00s]  470, colon, eight, zero, six D, colon, one, colon, zero, colon, zero, colon,
[328.00s -> 333.00s]  zero, colon, nine. And there's a prefix line here of 64
[333.00s -> 340.00s]  saying that the subnet is 64, the last 64 bits denote the actual address of the
[340.00s -> 346.00s]  node, which in this case, is this. You can also, if you want to use an
[346.00s -> 352.00s]  IPv6 address in HTTP, in a URL, say in your web browser, you can do it by
[352.00s -> 356.00s]  putting it into brackets. So this says to contact this node,
[356.00s -> 362.00s]  this IPv6 address, port 80 in the URL. And it's also possible if you want to
[362.00s -> 366.00s]  write the low 32 bits, like IPv4, as an IPv4 address.
[366.00s -> 373.00s]  Just because that's one way to make IPv4 addresses addressable from IPv6, is you
[373.00s -> 379.00s]  have a leading 96 bits denoting this is an IPv4 address, and then you stick the
[379.00s -> 384.00s]  IPv4 address at the end. So we have these enormous 128 bit
[384.00s -> 389.00s]  addresses which allow us to add many more devices to the internet.
[389.00s -> 394.00s]  So how do you assign them? Currently, so you look at IPv4, you
[394.00s -> 400.00s]  have HANA and ICANN and RIRs handing out slash eights, and the RIRs take the slash
[400.00s -> 405.00s]  eights, the blocks of 16 million addresses and distribute them to
[405.00s -> 409.00s]  companies or organizations or whatever as, as asked.
[409.00s -> 414.00s]  And so it turns out that actually how you assign IPv6 addresses has gone through a
[414.00s -> 419.00s]  couple of iterations since people have gained better experience and refinement.
[419.00s -> 425.00s]  For example, the, the first RFCs on this, RFC 3177, said that generally you
[425.00s -> 430.00s]  want to give people a slash 48. Sometimes you want to give them a slash
[430.00s -> 434.00s]  64. Very, very rarely give them a slash 128.
[434.00s -> 439.00s]  Alright, so this would be that we have 48 bits identifying the network, 80
[439.00s -> 443.00s]  bits for this then they can use the interface ID.
[443.00s -> 447.00s]  Sometimes we get 64 where then 64 denotes the interface ID.
[447.00s -> 452.00s]  And occasionally you have just essentially the single 128 bit.
[452.00s -> 456.00s]  So you're giving just one address to somebody.
[456.00s -> 463.00s]  RFC 6177 after many years of experience said ah, this isn't a great idea.
[463.00s -> 469.00s]  So you want to give out at least slash 64s, which I mean, you don't want the
[469.00s -> 475.00s]  64 to be any higher than that. You do not want to be giving out 128.
[475.00s -> 480.00s]  So give out 64s or maybe 60s even, you know, or 56s as needed.
[480.00s -> 485.00s]  The observation is that 48 is a lot, much more than almost anyone needs.
[485.00s -> 490.00s]  And there are lots of cases where people needed more than 164, and so you
[490.00s -> 494.00s]  can allocate it. And then kind of like how IPv4, when you
[494.00s -> 499.00s]  go to a regional Internet registry and you ask them for a block of addresses,
[499.00s -> 503.00s]  they're going to ask you how many. And they're going to make a decision as
[503.00s -> 507.00s]  well. But if you ask say for a slash so you ask
[507.00s -> 514.00s]  for a slash 23, they're going to decide whether you really need that number of
[514.00s -> 522.00s]  addresses, in this case 512 addresses. And in the same way, today RIRs can decide
[522.00s -> 527.00s]  on the allocation sizes. Do you get a 64, do you get a 60, do
[527.00s -> 531.00s]  you get a 56, etc. Great, we have this way of distributing
[531.00s -> 537.00s]  IPv4 of IPv6 addresses. So how do we actually get an IPv6
[537.00s -> 541.00s]  address? So, if you look at something like DHCP,
[541.00s -> 546.00s]  you know, you basically need to ask for an IPv4 address and it's independent of
[546.00s -> 549.00s]  anything else. But the IPv6 address space is so much
[549.00s -> 553.00s]  larger, it might be you can do something a lot simpler and just simplify
[553.00s -> 556.00s]  the configuration devices than exactly what it does.
[556.00s -> 561.00s]  So it turns out that if you have a slash 64 subnet, that is, you know, your
[561.00s -> 566.00s]  organization has a slash 64, so 64-bit subnet identity, or network
[566.00s -> 571.00s]  identifier, you can then automatically generate your own IPv6 address just from
[571.00s -> 575.00s]  this subnet identifier. So it turns out that Ethernet cards,
[575.00s -> 579.00s]  this is assuming they're using Ethernet, which is basically what almost
[579.00s -> 583.00s]  everybody uses today. Ethernet devices have 48-bit, they have
[583.00s -> 587.00s]  48-bit unique identifiers. Their layer two address identifies the
[587.00s -> 590.00s]  actual device. It's specified in manufacturing, it's
[590.00s -> 595.00s]  baked into the card, often you can reprogram it, but it's baked into the
[595.00s -> 598.00s]  cart. And so the IP, the Ethernet address
[598.00s -> 603.00s]  looks something like this, where there's a manufacturer code, right, saying, oh,
[603.00s -> 608.00s]  this was made, say, by Apple, or it was made by Dell, or it was made by
[608.00s -> 614.00s]  HP, or Cisco. So these codes are what an organization
[614.00s -> 618.00s]  gives out. And then when an organization, you know,
[618.00s -> 624.00s]  needs a code, it can then use the lower 24 bits to basically produce 16 million
[624.00s -> 629.00s]  devices with that code. And if it's a new code, it gets a new
[629.00s -> 632.00s]  code. And the zero here is to denote just
[632.00s -> 636.00s]  for unicast MAC address, the G is zero, and then there's a unicast MAC
[636.00s -> 639.00s]  address. And so what you do is you take this
[639.00s -> 645.00s]  Ethernet address, this 48-bit Ethernet unique identifier, and you perform a
[645.00s -> 649.00s]  transformation. You basically add some ones in the
[649.00s -> 653.00s]  middle. You flip to zero or you flip to
[653.00s -> 658.00s]  zero and you add FFFE, so FFFE into the middle.
[658.00s -> 662.00s]  And you can then get a 64-bit identifier.
[663.00s -> 668.00s]  So now, if I know my organization's 64-bit subnet ID, let's just say it's X, and I
[668.00s -> 673.00s]  know my Ethernet address from my hardware card, which is, say, you know,
[673.00s -> 679.00s]  Y, I can then take Y, put it through this function, and now my IPv6 address
[679.00s -> 684.00s]  is just this first 64 bits within these latter 64 bits.
[684.00s -> 690.00s]  And so this is specified in RFC 4291. And so here's an example of how you
[690.00s -> 695.00s]  have what is a large address space in that the size of the address space being
[695.00s -> 700.00s]  128 bits actually gives you a great deal of flexibility in terms of assigning
[700.00s -> 704.00s]  addresses. So for example, one thing you could
[704.00s -> 709.00s]  point out is every single Ethernet device has these same two bytes in it.
[709.00s -> 712.00s]  You're not, you're not going to reuse them.
[712.00s -> 715.00s]  So in some ways that's flexible because it's nice if we want to do something
[715.00s -> 718.00s]  besides Ethernet. We know as long as we don't match
[718.00s -> 723.00s]  these bits, then we can generate an IPv6 address which will not collide with the
[723.00s -> 727.00s]  Ethernet device. But essentially just that tremendous
[727.00s -> 731.00s]  planitude of addresses gives us a bunch of flexibility and can simplify
[731.00s -> 736.00s]  management, can simplify configuration. So in that way, IPv6 is really nice.
