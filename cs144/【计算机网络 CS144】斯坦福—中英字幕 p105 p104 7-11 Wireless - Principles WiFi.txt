# Detected language: en (p=1.00)

[0.00s -> 4.00s]  So in this video, I'm going to dig into the details of 802.11, or Wi-Fi.
[4.00s -> 8.00s]  What its packet formats look like, how it used different, how it used different
[8.00s -> 12.00s]  media access control algorithms, and sort of an overview of Wi-Fi itself.
[12.00s -> 16.00s]  So recall when we were talking about physical errors and coding and
[16.00s -> 21.00s]  different modulation schemes that something like 802.11n has a whole
[21.00s -> 24.00s]  bunch of different speeds it can operate at.
[24.00s -> 29.00s]  So here's just a limited set of very, actually a reasonably small subset of the
[29.00s -> 34.00s]  ways in which an 802.11n link can work. And so there's this thing, MCS index,
[34.00s -> 39.00s]  this is actually a field in the packet, and it tells you, for the data portion of
[39.00s -> 43.00s]  a packet, how the data portion is modulated, and how it's coded.
[43.00s -> 47.00s]  And so in practice, 802.11n is used everything from binary phase shift
[47.00s -> 52.00s]  keying up to 64 quadrature amplitude modulation with coding schemes from one
[52.00s -> 56.00s]  half to five sixths. And this means that the actual range
[56.00s -> 61.00s]  of data speeds that you see for an 802.11n link, which is going to adapt based on
[61.00s -> 66.00s]  the observed signal to noise ratio, is from, and this is just a subset, it
[66.00s -> 70.00s]  actually goes faster as we'll see in a future video on MIMO.
[70.00s -> 76.00s]  From 6.5 megabits per second to 150 megabits per second.
[76.00s -> 82.00s]  And so this is a factor of, you know, over 20 difference between the speeds.
[82.00s -> 87.00s]  And so, Wi-Fi 802.11n is able to, depending on what the spectrum is like,
[87.00s -> 92.00s]  depending on what timing is like, is able to adapt across a huge range of
[92.00s -> 97.00s]  speeds, so that it can adapt its link based on the channel conditions.
[97.00s -> 101.00s]  Compare this to a wired system, where because the signal to noise ratio is
[101.00s -> 105.00s]  fixed based on the medium, you just have a fixed speed that you're gonna
[105.00s -> 108.00s]  operate at, which is the fastest speed the other side can do.
[108.00s -> 111.00s]  So imagine this is kind of a challenge, which is that Wi-Fi, depending on the
[111.00s -> 115.00s]  signal to noise ratio that it observes the channel conditions, wants to be able to
[115.00s -> 118.00s]  operate at this huge range of bit rates. And so how does this work?
[123.00s -> 126.00s]  And so this is down occurring at the, the physical and link layer.
[126.00s -> 132.00s]  And so, what happens is, this is what the 802.11b physical layer looks like.
[132.00s -> 136.00s]  So here, there's this physical layer header, which starts with some
[136.00s -> 140.00s]  synchronization bits. This is what allows the other side to detect, oh, this is
[140.00s -> 142.00s]  actually a Wi-Fi signal, this isn't just junk.
[142.00s -> 146.00s]  So there's a series of synchronization bits, followed by 16 bits that denote,
[146.00s -> 150.00s]  okay, it's no longer synchronization, this is the, what's called the SFD, or
[150.00s -> 154.00s]  starter frame delimiter. So there's this particular sequence of
[154.00s -> 157.00s]  bits you expect. Then there's a starter frame delimiter
[157.00s -> 160.00s]  denoting that the synchronization is over, because it might be you started,
[160.00s -> 163.00s]  say, in the middle of the synchronization, you don't know when it's gonna end.
[163.00s -> 169.00s]  And then after that, there's a series of 48 bits denoting the signal, the
[169.00s -> 177.00s]  service, the length and the CRC of this physical layer chunk.
[177.00s -> 182.00s]  All of this is being scrambled by the physical layer, using forward error
[182.00s -> 187.00s]  correction, coding, interleaving, all those kinds of techniques that'll be
[187.00s -> 191.00s]  robust to the errors. Now, of course, you need to get
[191.00s -> 195.00s]  this in its entirety before you can start necessarily pulling the link from a part,
[195.00s -> 198.00s]  cuz you just seem to say, no, what the length is.
[201.00s -> 205.00s]  So that's the physical layer. Then in the link frame, we have a whole
[205.00s -> 207.00s]  bunch of fields. So there's the frame control field.
[207.00s -> 210.00s]  This gives you sort of control information about the frame, what it's
[210.00s -> 212.00s]  like. There's duration.
[212.00s -> 217.00s]  This tells you how long this packet or things about it are gonna take.
[217.00s -> 222.00s]  This is really important if, say, the data rate is higher than you can
[222.00s -> 226.00s]  demodulate. Like, you don't have the high enough
[226.00s -> 229.00s]  signal to noise ratio. So this duration is sent.
[229.00s -> 232.00s]  You know how long this packet or this exchange is gonna be.
[232.00s -> 235.00s]  It's a way to tell the nodes, hey, this is how long this is gonna take.
[235.00s -> 238.00s]  There can be up to four addresses embedded in the header.
[238.00s -> 242.00s]  Often you just have a two addressing mode. Oh, there's the source and there's
[242.00s -> 245.00s]  the destination. But there are other things you can do,
[245.00s -> 247.00s]  like you wanna bridge across networks, etc.
[247.00s -> 251.00s]  There's a sequence number. Then there's the network data, what's
[251.00s -> 254.00s]  coming in from the network layer. And then finally a frame check
[254.00s -> 256.00s]  sequence. So think of this like a CRC.
[256.00s -> 258.00s]  It's a four byte frame check sequence.
[260.00s -> 263.00s]  So let's look at these first two fields, the frame control and duration.
[263.00s -> 266.00s]  Now what these are used for, as I was saying, is the duration field
[266.00s -> 269.00s]  tells listeners, other nodes that can hear the packet and also the
[269.00s -> 272.00s]  recipient, how long this packet or packet exchange is gonna take.
[272.00s -> 275.00s]  So in that way, even if they can't understand those packets,
[275.00s -> 278.00s]  because they're too fast, they know how long it's gonna take,
[278.00s -> 281.00s]  and they can use this for something called virtual carrier sense.
[281.00s -> 287.00s]  The idea here is recall that in the CSMA CA algorithm, a node will
[287.00s -> 290.00s]  count down while the channel is busy.
[292.00s -> 295.00s]  Now it could detect the channel is busy directly by listening,
[295.00s -> 299.00s]  or it could detect the channel is busy virtually by being told that it is.
[299.00s -> 304.00s]  So this duration field, for example, is what a CTS packet uses to tell
[304.00s -> 308.00s]  nodes around it, hey, clear to send, I, you know, your channel is
[308.00s -> 312.00s]  busy for this long because I'm gonna be receiving something,
[312.00s -> 314.00s]  and so you shouldn't transmit.
[314.00s -> 317.00s]  So another thing the 802.11 header can do is essentially
[317.00s -> 320.00s]  virtualize a link. So think we have these three addresses.
[320.00s -> 322.00s]  So I'm not gonna go into the fourth one.
[322.00s -> 326.00s]  Let's just consider these three. So this is the case where if I want
[326.00s -> 332.00s]  to send an AP. Act more like a switch, say, than an
[332.00s -> 337.00s]  independent link layer device to which a packet is destined.
[337.00s -> 343.00s]  So in this case, I can tell, hey, I'd like to send, this is, you know, I'd
[343.00s -> 349.00s]  like to send a packet from Adder one to Adder two via Adder three.
[349.00s -> 354.00s]  There's a way of telling the AP, aha, you know, I'd like to send a
[354.00s -> 358.00s]  packet to this other link layer address through you.
[358.00s -> 363.00s]  So you can sort of virtualize that link of the access point.
[363.00s -> 369.00s]  And so give the nodes that are connected wirelessly virtual access to the wired
[369.00s -> 374.00s]  network sitting behind the AP. So one of the things that we saw with
[374.00s -> 379.00s]  RTS CTS is that depending on the speed that you use RTS CTS, these control
[379.00s -> 385.00s]  packets could have a significant overhead up to 25% at 11 megabits for 802.11b.
[385.00s -> 389.00s]  And this all comes down to the fact that because 802.11 has this huge range of
[389.00s -> 392.00s]  bit rates, but it needs to be backwards compatible.
[392.00s -> 397.00s]  This means that, say, these, this physical region, the physical frame
[397.00s -> 401.00s]  header needs to be comprehensible by everyone listening.
[401.00s -> 408.00s]  So I can't, if I'm a transmitter, I can't transmit the physical header at
[408.00s -> 412.00s]  my full speed. So if I'm operating at one megabit or 600
[412.00s -> 417.00s]  megabits, I still need to transmit this header at the same speed so that everyone
[417.00s -> 420.00s]  can understand it. Same with things like the duration
[420.00s -> 423.00s]  field. And so the way to think about this is
[423.00s -> 427.00s]  that because the slowest link is, say, one megabit per second, I need to
[427.00s -> 431.00s]  transmit this so that everyone operating, perhaps even at one megabit per second,
[431.00s -> 435.00s]  can understand it. Then the data region may, maybe will
[435.00s -> 439.00s]  go up to 600 megabits per second, so tiny, tiny, tiny.
[439.00s -> 444.00s]  But this, this initial control sequence is still gonna remain the same length.
[444.00s -> 449.00s]  It's in practice what this means is that as Wi-Fi speeds get faster and
[449.00s -> 453.00s]  faster and faster, right? So you can imagine if I have a slow
[453.00s -> 458.00s]  speed, then the data, this is at one megabit, this is slow.
[458.00s -> 462.00s]  Here's control. Here's data.
[463.00s -> 466.00s]  The control is small compared to the data.
[466.00s -> 474.00s]  But as I make the data region faster and faster, here's data, which is faster,
[474.00s -> 483.00s]  control, or faster, it can be in fact that the control, here's data, here's
[483.00s -> 488.00s]  control, can be the dominant duration of the packet.
[488.00s -> 494.00s]  These bits are sent so slowly compared to the data region, say at the network layer,
[494.00s -> 499.00s]  that all of my airtime is consumed by these control headers.
[499.00s -> 503.00s]  And so people at Microsoft Research have done some, you know, analysis of this
[503.00s -> 507.00s]  and have shown that, look, when you're operating up to 600 megabits per
[507.00s -> 512.00s]  second in terms of the fastest 802.11 speed, 802.11n, you can do today.
[512.00s -> 519.00s]  This control sequence is 92% of your airtime. That is, you're only spending 8%
[519.00s -> 523.00s]  of your time actually sending data. So you can imagine, even if you double
[523.00s -> 527.00s]  your data rate, you're not going to actually double your throughput because
[527.00s -> 532.00s]  you're going to go from consuming 8% of the time to 4% of the time.
[532.00s -> 536.00s]  But still, then 96% of your time will be consumed with control traffic.
[536.00s -> 538.00s]  And so there's this diminishing return.
[538.00s -> 543.00s]  So, 802.11 is this basic MAC format. It's designed to work on top of many
[543.00s -> 545.00s]  physical errors, many modulations, many speeds.
[545.00s -> 549.00s]  But part of that is that it needs to have backwards compatibility.
[549.00s -> 553.00s]  So rather than, say, talk about the number of bytes that this packet's going
[553.00s -> 556.00s]  to last, it talks about how long this packet's going to last in time.
[556.00s -> 559.00s]  So that even if you don't know what the modulation scheme is, because it's
[559.00s -> 562.00s]  some future version of Wi-Fi that your device doesn't talk, it knows how
[562.00s -> 566.00s]  long the packet will be. MAC control, things like the
[566.00s -> 569.00s]  control descent packet are done in terms of durations.
[569.00s -> 573.00s]  There's this duration field where it can say, hey, the channel around me needs
[573.00s -> 576.00s]  to be clear for this number of microseconds.
[576.00s -> 580.00s]  802.11 also allows you to virtualize a link, right, by embedding additional
[580.00s -> 584.00s]  addresses that you can actually bridge between the wired and the wireless ethernet.
[584.00s -> 587.00s]  And so while we read all this about faster and faster Wi-Fi, you know,
[587.00s -> 591.00s]  600 megabits per second, in practice, it's not actually getting that fast.
[591.00s -> 595.00s]  And the reason being that these control headers that are needed for backwards
[595.00s -> 599.00s]  compatibility and for interoperability just end up consuming all of your airtime.
[599.00s -> 603.00s]  And so the actual observed data throughput on a 600 megabit per second
[603.00s -> 606.00s]  Wi-Fi link is far, far, far below 600 megabits per second.
[606.00s -> 610.00s]  It's probably closer to, at most, you know, 50 megabits per second.
