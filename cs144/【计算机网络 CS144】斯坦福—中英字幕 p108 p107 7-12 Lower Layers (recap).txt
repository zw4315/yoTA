# Detected language: en (p=1.00)

[0.00s -> 5.16s]  By now, you've heard it said several times during the quarter that IP is the narrow waste
[5.16s -> 6.16s]  of the Internet.
[6.16s -> 10.20s]  You probably remember this figure from Unit 1.
[10.20s -> 13.90s]  If we want to use the Internet, we have to use the Internet Protocol, IP.
[13.90s -> 15.48s]  We have no choice.
[15.48s -> 18.00s]  But we have lots and lots of choices for link layer.
[18.00s -> 23.24s]  IP runs over many different link layers, such as Ethernet, Wi-Fi, DSL, 3G cellular,
[23.24s -> 24.60s]  and so on.
[24.60s -> 29.34s]  On top of the unreliable IP layer, we can choose between many different transport layers.
[29.34s -> 32.64s]  In this unit, you learned about different link layers.
[32.64s -> 35.90s]  You learned about the link layer service model, how Ethernet works, including the different
[35.90s -> 37.54s]  speeds it runs at.
[37.54s -> 40.86s]  You watched several videos about wireless networks, why wireless is different and why
[40.86s -> 44.70s]  we need medium access control protocols to share access to the air.
[44.70s -> 47.90s]  You learned about channeling capacity and how it helps us determine the maximum data
[47.90s -> 50.42s]  rate or capacity of a communication channel.
[50.42s -> 53.74s]  And you learned about error correction mechanisms.
[53.74s -> 58.18s]  We started by exploring the most commonly used wired network, Ethernet.
[58.18s -> 61.46s]  If you've ever physically plugged your computer into a network, it was almost certainly an
[61.46s -> 63.10s]  Ethernet network.
[63.10s -> 66.98s]  Although many different wired networks were proposed in the 1990s, and several were
[66.98s -> 71.74s]  standardized, built, and sold, Ethernet won the day and is now almost universally
[71.74s -> 73.94s]  used for wired networks.
[73.94s -> 76.94s]  This is because it is very simple, cheap, and reliable.
[76.94s -> 80.58s]  In a switched Ethernet network, when you have data to send, you can just go ahead
[80.58s -> 81.58s]  and send it.
[81.58s -> 85.34s]  The network learns addresses, so there are no complicated routing protocols to worry about.
[85.34s -> 89.22s]  Ethernet runs over the wiring that is installed in almost every office building, making it
[89.22s -> 91.18s]  very easy to install.
[91.18s -> 96.70s]  Nowadays, almost all Ethernet networks use Ethernet switches, allowing many simultaneous
[96.70s -> 99.66s]  communications in the same network.
[99.66s -> 103.30s]  And every link is full duplex, allowing data to flow in both directions at the same
[103.30s -> 104.30s]  time.
[104.30s -> 110.06s]  In the next few years, we will start to see 40 Gbps Ethernet, 100 Gbps Ethernet, and
[110.06s -> 111.06s]  beyond.
[111.30s -> 117.38s]  Ethernet looks certain to remain the dominant wired link layer for years to come.
[117.38s -> 122.18s]  All link layers have a maximum packet size they can carry.
[122.18s -> 125.50s]  For Ethernet, this is 1500 bytes by default.
[125.50s -> 130.02s]  Other link layers can carry larger packets, such as the FDDI standard of the 1990s that
[130.02s -> 133.30s]  carried packets up to 4500 bytes long.
[133.30s -> 139.44s]  Some Ethernet networks are configured to carry so-called jumbo frames up to 9 kilobytes long.
[139.48s -> 146.00s]  We call the longest packet a link can carry its MTU, or Maximum Transmission Unit.
[146.00s -> 150.84s]  When a router interconnects two links with different MTUs, it might need to fragment
[150.84s -> 156.36s]  IP datagrams going from the link with the larger MTU to the smaller one.
[156.36s -> 160.08s]  You learned how a router does this using the fragment fields in the IPv4 header to
[160.08s -> 165.36s]  break IP datagrams into new, self-contained IP datagrams.
[165.36s -> 167.84s]  The network doesn't reassemble the fragments.
[167.84s -> 172.32s]  The destination host uses information in the IPv4 header to put the data back into the
[172.32s -> 176.92s]  correct order before handling it to TCP or UDP.
[176.92s -> 179.00s]  Or ICMP.
[179.00s -> 182.96s]  IP fragmentation is less common than it used to be, for two reasons.
[182.96s -> 188.48s]  First, most wired networks use Ethernet today, and so the MTU tends to be 1500 bytes on
[188.48s -> 191.52s]  most links, and there is no need to fragment.
[191.52s -> 196.96s]  Second, hosts often use MTU discovery when creating a TCP connection to identify the shortest
[196.96s -> 198.92s]  MTU along the path.
[198.92s -> 203.72s]  The senders don't send packets larger than the MTU, eliminating the need for fragmentation
[203.72s -> 204.72s]  along the way.
[204.72s -> 210.40s]  When we talked about MSS, or Maximum Segment Size, of a transport protocol, it uses
[210.40s -> 215.44s]  this MTU discovery protocol.
[215.44s -> 218.04s]  Wireless networks are very different from wired ones.
[218.04s -> 223.16s]  In a wired network, the links have a constant data rate, but in a wireless network, the
[223.16s -> 225.40s]  link speed is always changing.
[225.40s -> 227.16s]  This is for several reasons.
[227.16s -> 230.88s]  Interference from nearby wireless networks, and from other devices operating in the same
[230.88s -> 234.44s]  frequency bands, such as microwave ovens and cordless phones.
[234.44s -> 239.32s]  It can also be caused by fades in the channel due to shadowing and multipath.
[239.32s -> 242.54s]  Wireless networks also suffer from the so-called hidden terminal problem.
[242.54s -> 246.10s]  This happens when two clients can't communicate directly with each other, but both can
[246.10s -> 248.72s]  communicate with an access point.
[248.72s -> 251.36s]  Because they don't hear each other, they don't know how to avoid transmitting
[251.36s -> 256.20s]  at the same time, and require extra coordination in the network.
[256.20s -> 259.44s]  Another way in which wireless networks are different is that the channel naturally
[259.44s -> 262.00s]  broadcasts all communications.
[262.00s -> 266.40s]  This means senders need to take turns to transmit, leading to medium access control
[266.40s -> 270.92s]  protocols such as the CSMA protocol used in Wi-Fi.
[270.92s -> 274.68s]  A shared broadcast channel also means we need to be more careful about securing our
[274.68s -> 275.68s]  data.
[275.68s -> 279.72s]  Everyone in the neighborhood can more easily eavesdrop on our conversation than in a wired
[279.72s -> 282.08s]  network.
[282.08s -> 286.40s]  You also learn some of the underlying principles of communications that dictate how we build
[286.40s -> 288.36s]  physical links.
[288.36s -> 292.12s]  You learn about bit errors, and how they can lead us to incorrectly decode a packet
[292.12s -> 293.32s]  on the wire.
[293.32s -> 299.08s]  You learn about ways to code data to make it easier to detect errors when they happen.
[299.08s -> 303.32s]  And you learned about how error-correcting codes work, and when we use them.
[303.32s -> 307.36s]  Generally speaking, we use error-correcting codes in environments where bit errors are
[307.36s -> 312.80s]  frequent, or where the cost of retransmitting a corrupted packet would be high, for example
[312.80s -> 316.20s]  in a network with a very large bandwidth delay product.
[316.20s -> 321.76s]  Finally, but perhaps most importantly of all, you learn about Shannon capacity.
[321.76s -> 327.28s]  Claude Shannon created the wonderfully powerful field of information theory, and the centerpiece
[327.28s -> 331.88s]  of his work was deducing the maximum error-free rate that a channel can communicate
[331.88s -> 335.48s]  at, now referred to as the Shannon capacity.
[335.48s -> 340.84s]  The remarkable property of the Shannon capacity is that it gives us a fundamental, inescapable
[340.84s -> 345.76s]  limit to the maximum rate information can be carried over a channel, regardless of the
[345.76s -> 350.12s]  clever coding schemes we invent.
[350.12s -> 354.40s]  All of the communication principles we describe give you a taste of some of the material
[354.40s -> 359.60s]  that you will learn in an electrical engineering class on communications theory or information
[359.60s -> 360.60s]  theory.
[360.60s -> 364.68s]  If you really enjoyed this material, you might consider taking EE classes in the future.
