# Detected language: en (p=1.00)

[0.00s -> 7.36s]  In this video, I will provide a worked example for a single flow with AIMD congestion control.
[7.36s -> 13.28s]  Alice is streaming a high definition video at 10Mbps from a remote server in San Francisco.
[13.28s -> 15.60s]  All packets are 250 bytes long.
[15.60s -> 21.88s]  She measures the ping time to the server, and the minimum time she measures is 5ms.
[21.88s -> 26.42s]  Once the AIMD window reaches steady state, for the rest of the video the sawtooth oscillates
[26.42s -> 29.62s]  between constant, minimum and maximum values.
[29.62s -> 35.86s]  The buffer is perfectly sized, so that it is just big enough to never go empty.
[35.86s -> 40.04s]  What is the smallest value of the AIMD window in bytes?
[40.04s -> 44.46s]  The minimum ping time of 5ms is when the buffer is empty, but the bottleneck link
[44.46s -> 46.26s]  is full.
[46.26s -> 51.26s]  At 10Mbps, there is therefore 50,000 bits in the pipe.
[51.26s -> 59.14s]  This means the minimum, or trough, of the AIMD sawtooth is 50,000 bits, or 6,250 bytes.
[59.14s -> 63.42s]  So therefore the answer is 6,250 bytes.
[63.42s -> 64.54s]  Part 2.
[64.54s -> 69.78s]  What is the largest value of the AIMD window in bytes?
[69.78s -> 77.26s]  When the buffer and bottleneck link are both full, the RTT is doubled from 5ms to 10ms.
[77.26s -> 81.56s]  At 10Mbps, this corresponds to 100,000 bits.
[81.56s -> 87.12s]  50,000 bits are in flight, and 50,000 bits are in the buffer.
[87.12s -> 96.18s]  Therefore the maximum, or peak, of the AIMD sawtooth is 100,000 bits, or 12,500 bytes.
[96.18s -> 97.18s]  Part 3.
[97.18s -> 100.56s]  How big is the packet buffer in the router in bytes?
[100.56s -> 104.96s]  We already decided in question 2 that when it is full, the buffer holds one minimum
[104.96s -> 110.40s]  RTT, or 50,000 bits.
[110.40s -> 111.40s]  Part 4.
[111.40s -> 115.88s]  After a packet is dropped, how long does it take for the window to reach its maximum
[115.88s -> 118.46s]  value again?
[118.46s -> 125.12s]  Packets are 2000 bits long, and so the window will increase by 2000 bits every RTT.
[125.12s -> 131.24s]  Therefore it takes 25 RTTs to increase the RTT by 50,000 bits and fill the buffer.
[131.24s -> 143.20s]  The average RTT is 7.5ms, therefore it will take 187.5ms.
[143.20s -> 144.28s]  Part 5.
[144.28s -> 151.44s]  If Alice now tries to watch the same video from a server in Australia with RTT 250ms,
[151.44s -> 157.80s]  how big should the router buffer be in bytes if the network still runs at 10Mbps?
[157.80s -> 165.28s]  The minimum RTT is 250ms, so the buffer needs to be at least 250ms x 10Mbps equals
[165.28s -> 168.84s]  2.5 x 106 bits.
[168.84s -> 180.24s]  Because we express storage in powers of 2, the answer is 2.4Mb, or 298Kb.
[180.24s -> 181.60s]  Part 6.
[181.60s -> 185.64s]  When the server is in Australia, after a packet is dropped, how long does it take
[185.64s -> 190.48s]  for the window to reach its maximum value again in seconds?
[190.48s -> 194.54s]  As before, the window increases by 2000 bits every round.
[194.54s -> 205.18s]  To fill the buffer, we'll take 2.5 x 106 divided by 2 x 103 equals 1250 rounds.
[205.18s -> 214.10s]  The average RTT is 375ms, so the time to reach the maximum again is 468.75 seconds,
[214.10s -> 217.86s]  or almost 8 minutes.
[217.86s -> 219.70s]  The answer might surprise you.
[219.70s -> 224.68s]  It takes a long time for the AIMD flow to recover from a single packet drop.
[224.68s -> 228.42s]  This would be a real problem in practice, which motivates us to look for better and
[228.42s -> 231.14s]  quicker ways for TCP to recover from dropped packets.
