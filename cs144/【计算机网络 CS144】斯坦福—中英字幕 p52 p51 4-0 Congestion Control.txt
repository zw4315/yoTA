# Detected language: en (p=1.00)

[0.00s -> 6.72s]  So, in this unit, we're going to be learning about how to control congestion in networks.
[6.72s -> 9.50s]  You already know about something called flow control.
[9.50s -> 14.68s]  Flow control is when we try to prevent a sender from overwhelming a receiver by
[14.68s -> 18.84s]  the receiver telling the sender to slow down.
[18.84s -> 22.80s]  Congestion control is essentially extending that notion to the network as a whole.
[22.80s -> 26.44s]  You can imagine that if senders were to send too many packets into the network,
[26.44s -> 28.20s]  they're going to overwhelm the network.
[28.24s -> 31.88s]  The buffers in the routers are going to fill up, the links are going to overflow,
[31.88s -> 33.52s]  and we're going to start cropping packets.
[33.52s -> 35.60s]  Probably not a very good thing to happen.
[35.60s -> 41.60s]  So congestion control is about preventing the senders from overwhelming the network.
[41.60s -> 43.64s]  So that leads us naturally to ask,
[43.64s -> 48.52s]  how do we do it? What do we want from a congestion control mechanism?
[48.52s -> 51.52s]  First, clearly, it needs to prevent the overwhelming from happening.
[51.52s -> 55.12s]  And the second thing is we generally want it to spread the pain evenly.
[55.16s -> 58.48s]  We want to make sure that all of the flows that are being controlled
[58.48s -> 61.08s]  are being controlled in an equal way.
[62.24s -> 66.36s]  So one of the big questions that comes up is we want to control congestion.
[66.36s -> 67.40s]  But how should we do it?
[67.40s -> 68.20s]  Where should we do it?
[68.20s -> 69.56s]  Should we do it at the edge?
[69.56s -> 70.72s]  Should we do it within the network?
[71.84s -> 76.88s]  Well, if we follow the end-to-end argument, the strong end-to-end argument,
[76.88s -> 80.32s]  it would say that we want the network to just forward packets.
[80.32s -> 83.16s]  We want the intelligence to be at the edges.
[84.16s -> 87.28s]  And so that's actually in practice often what's done today.
[87.28s -> 91.92s]  So in this unit, we're going to talk about TCP and how TCP controls congestion.
[91.92s -> 94.28s]  It turns out it's one of its most important features,
[94.28s -> 99.12s]  that a TCP sender, a TCP receiver, or particularly a sender,
[99.12s -> 101.88s]  can control how many packets it puts into a network
[101.88s -> 104.20s]  to make sure that it doesn't overwhelm the network,
[104.20s -> 106.40s]  controls the congestion.
[106.40s -> 108.08s]  And so it's this end-to-end approach,
[108.08s -> 110.08s]  leaving the inside of the network simple.
[110.08s -> 111.80s]  And it turns out you can just do it at the edge.
[111.84s -> 114.84s]  And it turns out you can do it very, very well.
[114.84s -> 118.76s]  So TCP Congestion Control chose to use a particular algorithm
[118.76s -> 124.08s]  called Additive Increase Multiplicative Decrease, or AIMD.
[124.08s -> 128.12s]  And it turns out that this algorithm has a bunch of really interesting properties.
[128.12s -> 132.32s]  When you actually look at how it behaves in even very large,
[132.32s -> 135.88s]  complex networks with millions of flows competing,
[135.88s -> 140.52s]  it has some very nice stable properties that allow it to control congestion well,
[140.52s -> 143.24s]  and also in a fair way.
[143.24s -> 145.52s]  It turns out that it's such an important idea.
[145.52s -> 148.92s]  By many, it's considered one of the crown jewels of networking.
[148.92s -> 151.36s]  It's one of the most important intellectual ideas
[151.36s -> 153.68s]  to have found its way into the network.
[153.68s -> 154.92s]  It's in TCP.
[154.92s -> 158.36s]  It's been in TCP now for about 25 years.
[158.36s -> 162.44s]  And so it's a very significant part of controlling congestion in the internet.
[162.44s -> 167.84s]  So in this unit, you're going to be learning about what congestion control is,
[167.88s -> 171.80s]  the kinds of properties that we would like from a congestion control algorithm,
[171.80s -> 177.24s]  what the specific congestion control mechanisms are that are used in TCP,
[177.24s -> 179.56s]  the AIMD that Phil just mentioned.
[179.56s -> 182.32s]  And you're going to be learning a lot of details about how that works,
[182.32s -> 185.64s]  how it's implemented in practice, how it works in different scenarios,
[185.64s -> 189.28s]  what happens when you have one flow, what happens when you have many flows.
[189.28s -> 193.08s]  And you're going to be learning a lot about not only what TCP is today,
[193.08s -> 194.36s]  but it's going to give you a lot of insight
[194.36s -> 197.56s]  into what TCP congestion control might become in the future.
