# Detected language: en (p=1.00)

[0.00s -> 4.12s]  When we read about computer networks in the newspaper, it's often because they've been
[4.12s -> 6.20s]  attacked or compromised.
[6.20s -> 10.64s]  Almost every week we read about hackers breaking in and walking off with millions of credit
[10.64s -> 15.58s]  card numbers and other private data, perhaps following a phishing attack or by exploiting
[15.58s -> 20.40s]  some other vulnerability to access a supposedly private network.
[20.40s -> 23.44s]  We might read about a new worm that is designed to take over computers, turning
[23.44s -> 29.20s]  them into an army of botnets, such as the infamous Code Red and Slammer worms of
[29.24s -> 31.92s]  the early 2000s.
[31.92s -> 36.64s]  Botnets are armies of infected computers, controlled by a master, that are commonly
[36.64s -> 39.02s]  used to send spam.
[39.02s -> 45.06s]  While spam levels appear to be dropping slightly, reports suggest that between 75% and 95%
[45.06s -> 49.40s]  of all emails sent every day are spam, adding up to hundreds of millions of emails
[49.40s -> 51.36s]  per day.
[51.36s -> 53.80s]  Worms are also sent by one government to another.
[53.80s -> 58.40s]  For example, when the 2010 Stucknets worm, which is widely believed to have been created
[58.40s -> 63.00s]  by the US and Israeli governments, was used to attack centrifuges used for processing
[63.00s -> 66.02s]  nuclear material in Iran.
[66.02s -> 69.72s]  In this video, we're going to look at some ways that a network can be compromised
[69.72s -> 76.40s]  by an attacker, and I'll explain the security characteristics we want from a network.
[76.40s -> 80.32s]  Let's start by exploring the different ways a communication can be compromised.
[80.32s -> 84.28s]  The first and simplest way is for an attacker to eavesdrop on someone else's private
[84.28s -> 86.64s]  communication.
[86.64s -> 90.80s]  This means passively sniffing and recording network data, or it could mean listening to
[90.80s -> 95.08s]  the metadata, such as noting that a connection has been made, without necessarily recording
[95.08s -> 97.84s]  the data inside the connection.
[97.84s -> 101.72s]  Connection metadata was made infamous recently, when the NSA acknowledged recording information
[101.72s -> 107.52s]  about calls and connections made, without supposedly recording the contents.
[107.52s -> 109.08s]  There are many ways to tap a network.
[109.08s -> 115.12s]  For example, at the physical layer, an attacker might passively tap an electrical or optical
[115.12s -> 116.12s]  cable.
[116.12s -> 120.32s]  Or as you've seen before, we can listen in to WiFi, because the packets are broadcast
[120.32s -> 122.52s]  for everyone to hear.
[122.52s -> 127.20s]  A third way is for an attacker to persuade a router to duplicate and forward copies of
[127.20s -> 128.66s]  packets.
[128.66s -> 133.46s]  In each case, the attacker can use standard tools such as Wireshark to decode the protocols
[133.46s -> 137.10s]  and understand the user's data.
[137.10s -> 141.44s]  A second type of compromise is when an attacker modifies, deletes or inserts data as it
[141.44s -> 142.44s]  passes through the network.
[142.44s -> 145.80s]  In other words, they are actively tampering with our data.
[145.80s -> 149.72s]  Changing the contents of the packets, redirecting packets to a different rogue server without
[149.72s -> 154.20s]  us knowing, or taking control over our end host.
[154.20s -> 157.96s]  This might happen by persuading us to download malware based on a phishing attack, or by
[157.96s -> 162.28s]  exploiting a vulnerability in our computer or the way we communicate.
[162.28s -> 166.12s]  For example, later we'll see how it's possible to hijack an ongoing TCP connection
[166.12s -> 168.24s]  without either end knowing.
[168.24s -> 173.08s]  Finally, an attacker might just want to prevent us from communicating at all.
[173.08s -> 176.32s]  This kind of attack is usually called a denial of service attack.
[176.32s -> 180.76s]  Sometimes these attacks are performed by swamping servers or entire networks by generating
[180.76s -> 184.64s]  billions of messages from different botnets spread around the internet.
[184.64s -> 189.98s]  We'll learn more about denial of service attacks in a later video.
[189.98s -> 193.80s]  Let's take a look at an example of eavesdropping.
[193.80s -> 198.20s]  Imagine that Alice is making a purchase online from an e-commerce site.
[198.20s -> 202.72s]  She's using a laptop connected to her local WiFi access point, then over the internet
[202.72s -> 205.54s]  to Amazon.com.
[205.54s -> 210.64s]  She browses the site and makes her credit card purchase using vanilla HTTP.
[210.64s -> 215.68s]  Unfortunately, what she doesn't know is that the bad guy attacker is listening in
[215.68s -> 219.20s]  to what she's doing.
[219.20s -> 221.92s]  There are a few ways the attacker can eavesdrop.
[221.92s -> 227.96s]  For example, by listening to or sniffing the WiFi packets broadcast into the air.
[227.96s -> 231.56s]  Anyone with a laptop and the Wireshark tool can listen to packets in the air, and
[231.56s -> 235.08s]  if they're not encrypted, decode their contents.
[235.08s -> 238.84s]  Alternatively, the attacker can eavesdrop on the physical wire by placing a passive
[238.84s -> 244.84s]  detector to pick up small electromagnetic signals that leak from the cable.
[244.84s -> 250.08s]  Or the attacker might insert an electrical connection onto the wire itself.
[250.08s -> 253.44s]  If the attacker is eavesdropping on a long-haul link in the internet backbone, they're
[253.44s -> 255.92s]  more likely to be tapping into an optical fiber.
[255.92s -> 260.08s]  This can be done by placing a device called an optical coupler, which diverts a small
[260.12s -> 264.32s]  fraction of the optical signal onto a second optical fiber, which can then be listened
[264.32s -> 267.16s]  to and decoded.
[267.16s -> 272.20s]  An attacker without physical access might manage to subvert the switches and routers
[272.20s -> 276.48s]  along the path, tricking one of them into duplicating data and forwarding it to
[276.48s -> 278.80s]  the attacker's computer.
[278.80s -> 282.20s]  This can be done by remotely subverting ethernet IP or DNS traffic.
[282.20s -> 286.10s]  We'll see examples of all three later.
[286.10s -> 289.26s]  Or the attacker might manage to break into the router console and take over the router
[289.26s -> 292.12s]  completely.
[292.12s -> 297.74s]  In our example, if the attacker successfully eavesdrops on the clear HTTP communication,
[297.74s -> 301.70s]  he or she can learn Alice's private data, such as her credit card number and
[301.70s -> 303.98s]  a home address.
[303.98s -> 314.42s]  In a later video, we'll learn about how HTTPS prevents this from happening in practice.
[314.42s -> 319.46s]  If the attacker is able to insert herself into the middle of the communications between
[319.46s -> 325.10s]  Alice and Amazon.com, then the attacker can terminate the HTTP connection in the middle,
[325.10s -> 331.94s]  pretending to be Amazon to Alice, and pretending to be Alice to Amazon.
[331.94s -> 336.62s]  The attacker could simply pass through the data, recording it without changing it.
[336.62s -> 340.62s]  Or the attacker could alter the data, for example to modify the shipping address, causing
[340.62s -> 344.70s]  the purchased items to be delivered to the attacker instead of Alice.
[344.70s -> 348.90s]  These so-called man-in-the-middle attacks are very hard to detect, because both parties
[348.90s -> 356.78s]  can think they're talking to a legitimate end host.
[356.78s -> 360.90s]  A third line of attack is to redirect the traffic away from the server without Alice
[360.90s -> 364.28s]  realizing that she's not actually talking to Amazon.
[364.28s -> 368.54s]  If the attacker is able to fool the router to forward packets destined to Amazon.com
[368.54s -> 374.30s]  to the ACT attacker instead, then the attacker can respond and pretend to be Amazon.
[374.30s -> 379.54s]  Or the attacker might fool Alice's DNS server into returning the attacker's IP address when
[379.54s -> 383.02s]  Alice is trying to hook up Amazon's IP address.
[383.02s -> 387.62s]  In each case, Alice can be forced to browse the attacker's website and be encouraged to
[387.62s -> 392.82s]  enter her credit card information there instead.
[392.82s -> 400.98s]  Clearly, Alice is not happy, and would like her communication to be more secure.
[400.98s -> 404.90s]  In general, when we say we want secure communications over the Internet, we're saying
[404.90s -> 408.46s]  that we want secrecy and confidentiality.
[408.46s -> 411.62s]  We don't want anyone to listen in to our communication.
[411.62s -> 418.06s]  For this, we use encryption, and will describe how it works in one of the upcoming videos.
[418.06s -> 420.38s]  We want integrity.
[420.38s -> 423.78s]  We don't want our messages to be altered in transit.
[423.78s -> 427.50s]  The most common way to prove that a message has not been tampered with is to attach what
[427.50s -> 430.82s]  is called a Message Authentication Code, or MAC.
[430.82s -> 435.10s]  MACs are based on encryption as well, coupled with calculating a hash over the transmitted
[435.10s -> 436.10s]  message.
[436.10s -> 439.46s]  We'll study message authentication codes in an upcoming video.
[439.46s -> 442.48s]  Third, we want authentication.
[442.48s -> 446.38s]  We often want to confirm the identity of the other party we're communicating with.
[446.38s -> 451.06s]  In our example, Alice wants to know that she is really talking to Amazon, who she trusts,
[451.06s -> 453.86s]  before entering her credit card details.
[453.86s -> 457.58s]  In a later video, we'll study digital signatures and certificates that help us ensure
[457.58s -> 460.78s]  that we're really communicating with who we think we are.
[460.78s -> 465.06s]  Finally, we want uninterrupted communication.
[465.06s -> 468.92s]  We don't want someone to prevent us from communicating in the first place.
[468.92s -> 472.46s]  You may have heard of denial-of-service attacks when an attacker floods a network
[472.46s -> 475.46s]  or a set of servers to prevent them from working properly.
[475.86s -> 480.94s]  We'll study denial-of-service attacks shortly.
[480.94s -> 485.26s]  In the next few videos, we're going to study different types of attack.
[485.26s -> 490.74s]  We'll study eavesdropping, redirecting Ethernet, IP and DNS traffic, hijacking a running TCP
[490.74s -> 493.02s]  connection, and denial-of-service attacks.
