# Detected language: en (p=1.00)

[0.00s -> 2.88s]  In this unit, you learned about the transport layer.
[2.88s -> 7.56s]  Specifically, you learned about the three most important transport layers in use today.
[7.56s -> 12.28s]  The first TCP, or the Transmission Control Protocol, is used by over 95% of Internet
[12.28s -> 13.28s]  applications.
[13.28s -> 18.12s]  TCP is almost universally used because it provides the reliable end-to-end bi-directional
[18.12s -> 22.20s]  byte stream service that almost all applications desire.
[22.20s -> 24.20s]  Most of the videos in this unit were about TCP.
[24.20s -> 27.52s]  You learned how we detect that a packet was not delivered or was corrupted along
[27.52s -> 32.60s]  the way, and you learned about the mechanisms TCP uses to successfully retransmit data until
[32.60s -> 34.44s]  it is correctly delivered.
[34.44s -> 38.30s]  We spent three videos exploring different methods for reliably delivering data across
[38.30s -> 41.34s]  the unreliable Internet.
[41.34s -> 45.52s]  The second transport layer we studied is UDP, or the User Datagram Protocol.
[45.52s -> 50.64s]  UDP is used by applications that don't need the guaranteed delivery service of TCP,
[50.64s -> 56.20s]  either because the application handles retransmissions in its own private way, or because the
[56.20s -> 59.84s]  application just doesn't need the reliable delivery.
[59.84s -> 64.16s]  All UDP does is take application data and create a UDP datagram.
[64.16s -> 68.20s]  The UDP datagram identifies the application that the data should be sent to at the
[68.20s -> 69.20s]  other end.
[69.20s -> 70.40s]  That's about it.
[70.40s -> 76.48s]  Although very few applications use UDP, we saw examples of DNS and DHCP, which are
[76.48s -> 81.52s]  both simple request-response query protocols.
[81.52s -> 86.04s]  The third transport layer we studied is ICMP, or the Internet Control Message Protocol.
[86.04s -> 90.44s]  ICMP's main job is to send feedback if things are going wrong.
[90.44s -> 94.48s]  For example, if a router receives an IP datagram but doesn't know where to send it next,
[94.48s -> 98.56s]  then it sends an ICMP message back to the source to let it know.
[98.56s -> 103.00s]  ICMP is very useful for understanding why end-to-end communications are not working
[103.00s -> 104.00s]  properly.
[104.00s -> 108.32s]  Finally, you learned about one of the most important overarching architectural principles
[108.32s -> 113.20s]  that guided the design of the Internet, and continues to guide our thinking today.
[113.20s -> 115.18s]  It's called the end-to-end principle.
[115.18s -> 117.50s]  We learned about two versions of the end-to-end principle.
[117.50s -> 121.86s]  The milder version says that there are some functions that can only be correctly implemented
[121.86s -> 124.70s]  at the edges or fringe of the network.
[124.70s -> 127.74s]  These clearly need to be implemented there.
[127.74s -> 131.70s]  End-to-end reliable file transfer and security are two examples that we saw.
[131.70s -> 135.06s]  It's okay to help these features by adding functions to the network, but these can
[135.06s -> 138.78s]  only help, not replace the end-to-end functionality.
[138.78s -> 142.64s]  The second, stronger version of the end-to-end principle says that if we can implement
[142.64s -> 144.96s]  a function at the end hosts, then we should.
[144.96s -> 148.64s]  The basic idea is that networks should be kept simple, streamlined, with as few features
[148.64s -> 152.36s]  to go wrong to slow things down or require upgrading.
[152.36s -> 156.52s]  It assumes that the end hosts are quite intelligent, such as a laptop or a smartphone,
[156.52s -> 161.40s]  and can implement many of the features needed by the application.
[161.40s -> 165.60s]  In this unit, you studied five main topics.
[165.60s -> 167.82s]  1.
[167.82s -> 170.24s]  Three widely used transport layers.
[170.24s -> 173.44s]  TCB for reliable delivery of a byte stream between applications.
[173.44s -> 178.88s]  UDP as an unreliable delivery of datagrams between applications, and ICMP as a way to
[178.88s -> 181.52s]  detect when things go wrong.
[181.52s -> 182.68s]  2.
[182.68s -> 187.88s]  How TCP works, with a particular emphasis on how it reliably delivers bytes between
[187.88s -> 189.76s]  two applications.
[189.76s -> 194.28s]  You learned how data errors and missing packets are detected, and how packets are retransmitted
[194.28s -> 198.60s]  as well as several different retransmission strategies, including Selective Repeat and Go
[198.60s -> 199.60s]  Back In.
[200.12s -> 204.16s]  You learned about how the basic TCP mechanism uses Go Back In, and keeps track of the outstanding
[204.16s -> 206.64s]  unacknowledged bytes using a sliding window.
[206.64s -> 210.68s]  You also learned about the TCP state machine that keeps track of the current status of
[210.68s -> 212.72s]  the TCP connection.
[212.72s -> 214.32s]  3.
[214.32s -> 219.16s]  You learned how UDP works, and why it's used by a small number of applications.
[219.16s -> 220.92s]  4.
[220.92s -> 225.52s]  You learned how ICMP works, and how it helps us detect when communications go wrong
[225.52s -> 229.04s]  to monitor the performance of a route between two end hosts.
[229.04s -> 234.80s]  Finally, you learned about the end-to-end principle, which is an important overarching
[234.80s -> 239.60s]  principle used in the design of the internet and many other communication systems.
[239.60s -> 242.44s]  Throughout this class, and after you go out into the world to use your networking
[242.44s -> 247.20s]  expertise, you'll find many people talking about this principle to help guide their design
[247.20s -> 248.20s]  decisions.
[248.20s -> 254.48s]  So you should now have a good understanding of three transport layers.
[254.48s -> 259.88s]  You should understand different retransmission strategies and why TCP uses a sliding window.
[259.88s -> 264.00s]  You should know why TCP uses connections, how they are established, and the finite
[264.00s -> 266.16s]  state machine that maintains them.
[266.16s -> 269.60s]  And finally, you should be able to explain the end-to-end principle.
