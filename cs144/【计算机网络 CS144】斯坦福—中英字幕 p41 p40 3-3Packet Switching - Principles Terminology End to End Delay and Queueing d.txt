# Detected language: en (p=1.00)

[0.00s -> 8.00s]  In the first video on packet switching, I told you about what packet switching is and why it was used for the internet.
[8.00s -> 13.00s]  Packet switching is going to feature very prominently throughout this course, so we're going to spend quite a bit of time on it.
[13.00s -> 19.00s]  And many of the properties of the internet follow directly from the choice of packet switching.
[21.00s -> 27.00s]  So in this video I'm going to give you some useful definitions for propagation delay and packetization delay.
[27.00s -> 33.00s]  And we're going to use those definitions to come up with an expression for the end-to-end delay of a packet across a network.
[33.00s -> 39.00s]  I'm also going to tell you about queuing delay and how it makes the end-to-end delay unpredictable.
[39.00s -> 43.00s]  So let's start with some useful definitions.
[43.00s -> 47.00s]  We'll start with the definition of propagation delay.
[47.00s -> 55.00s]  So the propagation delay is the time that it takes a single bit of information to travel over a link at propagation speed C.
[55.00s -> 61.00s]  So look in the picture here and you'll see we have the computer on the left.
[61.00s -> 66.00s]  And we're going to consider the time that it takes for a bit to propagate from the one on the left to the one on the right.
[66.00s -> 72.00s]  That time the propagation delay, or T sub L, is simply L over C.
[74.00s -> 82.00s]  So the propagation delay is simply determined by how long the link is, L in our case, and the speed that a bit travels, C.
[83.00s -> 93.00s]  We use the variable C in most of the links we're interested in because the speed of propagation is very close to the speed of light.
[93.00s -> 100.00s]  For example, in a twisted pair of electrical cables, a bit propagates at about 70% of the speed of light.
[100.00s -> 104.00s]  And in an optical fiber, the speed of propagation is a tiny bit slower.
[104.00s -> 111.00s]  In most of our examples, we'll assume that the bit propagates at 2 times 10 to the 8 meters per second, which is close enough.
[112.00s -> 115.00s]  There you go. There's the bit going along the link. Let's have a look at that again.
[115.00s -> 121.00s]  So it's the speed or the time at which it takes to propagate over the link.
[123.00s -> 131.00s]  So for example, if we were considering how long it would take a bit to travel a thousand kilometers or a million meters in an optical fiber,
[131.00s -> 135.00s]  where the propagation speed was 2 times 10 to the 8 meters per second,
[135.00s -> 143.00s]  well, T sub L is 1000 times 10 to the 3 divided by 2 times 10 to the 8, or 5 milliseconds.
[144.00s -> 151.00s]  In a little bit, we're going to look at some examples, and you're going to do some examples in the multiple choice exercises embedded in the video.
[152.00s -> 156.00s]  Notice that the propagation delay doesn't depend on the data rate of the link.
[156.00s -> 161.00s]  It doesn't matter if the link is running at 1 kilobits per second or 10 gigabits per second.
[161.00s -> 169.00s]  The propagation delay is just a function of the speed of propagation of each bit and the length of the cable.
[173.00s -> 177.00s]  Another useful definition is the packetization delay.
[177.00s -> 185.00s]  This is the time from when the first bit of a packet is put onto the link until the last bit is put onto the link.
[185.00s -> 187.00s]  Let's take a look at an example here.
[187.00s -> 190.00s]  So see that packet there going onto the link?
[191.00s -> 198.00s]  The time that it takes to put all of the bits onto the link is going to be a function of the number of bits we're putting onto the link,
[198.00s -> 203.00s]  and the distance between them, or the number of bits per second that we can put onto the link.
[204.00s -> 209.00s]  So essentially, the data rate of a link is determined by how close together we can pack the bits.
[209.00s -> 217.00s]  If, for example, a link runs at 1 gigabit per second, we can put one bit onto the link every nanosecond.
[217.00s -> 223.00s]  We'll see in a later video about physical links what actually limits the data rate of a link.
[225.00s -> 231.00s]  So the packetization delay is determined by how fast we can put bits on the link, or the data rate R.
[231.00s -> 236.00s]  If a link runs at 1 kilobit per second, we can put a thousand new bits onto the link every second.
[236.00s -> 242.00s]  If it runs at 10 gigabits per second, then we can put 10 billion bits onto the link every second.
[243.00s -> 245.00s]  Let's look at a couple of examples.
[245.00s -> 254.00s]  If we had a 64-byte packet, that's 512 bits, it would take 5.12 microseconds to be transmitted onto a 100 megabits per second link.
[254.00s -> 255.00s]  Why is that?
[255.00s -> 258.00s]  Well, T sub P equals P over R.
[258.00s -> 267.00s]  So P in our case is 64 times 8, 512, divided by R, and R would be 100 times 10 to the 6.
[269.00s -> 278.00s]  Another example, a kilobit packet takes 1.024 seconds to be transmitted onto a 1 kilobit per second link.
[278.00s -> 281.00s]  So where did this 1.024 come from?
[281.00s -> 290.00s]  Well, this is a useful example here, because the 1 kilobit packet that we see here,
[290.00s -> 296.00s]  1 kilobit, when we're measuring a number of bits in a packet or in memory,
[296.00s -> 300.00s]  1 kilobit, as you know, is 1024, or 2 to the power of 10.
[301.00s -> 308.00s]  So that's why we have 1.024 seconds in order to transmit it onto a 1 kilobit per second link.
[309.00s -> 314.00s]  So in this case, it's a little bit confusing, 1 kilobit per second means 1,000 bits per second,
[314.00s -> 318.00s]  whereas the 1 kilobit in the packet is 1,024 bits.
[318.00s -> 323.00s]  This is standard throughout networking, and we'll see this happen over and over again.
[324.00s -> 334.00s]  So notice that the packetization delay is only a function of the length of the packet, that's P here,
[335.00s -> 341.00s]  and the rate at which we can put bits onto the link, or R bits per second,
[341.00s -> 348.00s]  makes no difference how long the link is or how fast bits propagate along it.
[352.00s -> 357.00s]  So next we're going to see how we can use our two different types of delay
[357.00s -> 360.00s]  to determine the overall end-to-end delay.
[361.00s -> 365.00s]  That's the time it takes a packet to go across a network from the source to the destination.
[368.00s -> 374.00s]  So the end-to-end delay is the time from when we send the first bit on the first link,
[374.00s -> 382.00s]  that would be over here, until the last bit of the packet arrives at the destination B.
[383.00s -> 389.00s]  So we can calculate the end-to-end delay by adding up the propagation and packetization delays
[389.00s -> 392.00s]  on every link along the path.
[392.00s -> 396.00s]  That is, we can look at those numbers that we calculated before
[396.00s -> 404.00s]  for how long it takes a packet from the first bit is sent until the last bit arrives on this link here,
[404.00s -> 409.00s]  and then we can add it to the time on here, on here, and on here.
[413.00s -> 420.00s]  So, in our case, that's going to depend on the length of the first link and the rate at which it runs.
[421.00s -> 425.00s]  And then we can use our expressions to calculate the end-to-end delay.
[425.00s -> 428.00s]  And we're going to come up with an expression that looks like this.
[428.00s -> 438.00s]  The end-to-end delay, T, equals the sum of, first of all, the delay here,
[438.00s -> 444.00s]  which is the packetization delay, the time that it takes to put the packet onto the link,
[444.00s -> 448.00s]  and then the time it takes for one bit to propagate along that link.
[448.00s -> 452.00s]  So we're going to sum up all of those to get the end-to-end delay.
[452.00s -> 458.00s]  Let's look at this in a little bit more example, because I think it will become a bit clearer.
[459.00s -> 463.00s]  So in our example here, the packet is going to traverse four links.
[464.00s -> 470.00s]  So we're going to repeat the process on every link along the path, and it's going to look something like this.
[470.00s -> 475.00s]  Here, we're taking a closer look by stretching out the links and the switches,
[475.00s -> 478.00s]  and remove the rest of the network, just to make it a little bit clearer.
[479.00s -> 487.00s]  This here is a timeline, and this timeline, with time increasing from the left to the right,
[487.00s -> 494.00s]  is going to show how bits propagate, and how the whole packet propagates from A over to B.
[498.00s -> 508.00s]  So the first bit is going to take L1 over C, that's the length of that first link divided by the propagation speed,
[508.00s -> 513.00s]  it's going to take that number of seconds to propagate from A to S1.
[513.00s -> 518.00s]  So here we can see the bit starting from here, and then propagating along the link.
[518.00s -> 525.00s]  L1 over C is the time, and this is it propagating the distance from A to S1.
[529.00s -> 536.00s]  After we sent the first bit, it's going to take P over R1 seconds,
[536.00s -> 540.00s]  until we can put the last bit of the packet onto the link.
[540.00s -> 544.00s]  So after P over R1, we've put the last bit onto the link.
[544.00s -> 553.00s]  And then at the time L1 C plus P over R1, that last bit will arrive at switch S1.
[556.00s -> 563.00s]  So at this point, by the time we get to this point here, the entire packet has arrived at S1.
[564.00s -> 571.00s]  So Internet routers are what we call store-and-forward devices.
[571.00s -> 579.00s]  What that means is that the switch S1 is going to wait until the whole packet arrives,
[579.00s -> 583.00s]  until it looks up the address and decides where to send it next.
[583.00s -> 588.00s]  It could instead start forwarding the packet after it had just seen the header,
[588.00s -> 590.00s]  and not wait for the whole packet to arrive.
[590.00s -> 592.00s]  That's something we call cut-through switching.
[592.00s -> 594.00s]  But Internet routers generally don't do that.
[594.00s -> 599.00s]  In a later video and in some of the exercises, we'll see examples of cut-through packet switches.
[599.00s -> 603.00s]  But getting back to our example, which is a store-and-forward network,
[603.00s -> 607.00s]  where every switch is going to store and forward the packets,
[607.00s -> 612.00s]  switch S1 is going to look at the packet after it's completely arrived,
[612.00s -> 615.00s]  and then it's going to send it onto the next link.
[615.00s -> 617.00s]  It's going to send it onto S2.
[617.00s -> 621.00s]  So here we can see that packet going onto S2.
[622.00s -> 629.00s]  So just as before, it takes L2 over C for the first bit to arrive at S2,
[629.00s -> 633.00s]  and then the last bit will arrive P over R2 seconds later.
[633.00s -> 639.00s]  And we can just repeat this whole process for each of the links in turn until we get to B.
[641.00s -> 646.00s]  So the overall end-to-end delay expression is just the sum of those from end to end,
[646.00s -> 649.00s]  which is the same expression we had before.
[653.00s -> 657.00s]  Okay, so it turns out I've only told you part of the story.
[657.00s -> 659.00s]  Let me tell you the rest of the story.
[659.00s -> 665.00s]  See, the thing about packet switching is that your packets share the links with packets from other users.
[667.00s -> 673.00s]  When several packets show up at the same time, wanting to go on the same link,
[673.00s -> 675.00s]  you can see this here.
[675.00s -> 679.00s]  We've got packets coming from here, maybe from another link entering the packet switch,
[679.00s -> 683.00s]  and from here coming into the packet switch from another link,
[683.00s -> 687.00s]  all wanting to go on this outgoing link from S2 to S3.
[687.00s -> 693.00s]  When this happens, all of the packets are going to have to fight or contend for that outgoing link.
[696.00s -> 700.00s]  So when several packets show up at the same time wanting to go on the same link,
[700.00s -> 705.00s]  in this case from S2 to S3, then some of the packets have to wait in the router's queue.
[705.00s -> 712.00s]  And this little symbol here, see this little red symbol here, is the picture that I'm going to draw for a queue.
[714.00s -> 716.00s]  Some people call it a packet buffer.
[716.00s -> 722.00s]  In general, it's a first-come-first-serve queue in which the packets are going to depart in the same order that they arrive.
[723.00s -> 727.00s]  We're going to say that the link from S2 to S3 is congested,
[727.00s -> 731.00s]  because there are lots of packets queued waiting to travel along it.
[731.00s -> 734.00s]  The packet buffer helps prevent us from having to drop any packets.
[734.00s -> 740.00s]  The bigger the buffer is, the less likely we are to have to drop a packet that wants to travel across the link.
[741.00s -> 746.00s]  So these packet buffers, they're going to be in all of the switches.
[746.00s -> 750.00s]  Every packet switch has buffers, and they're fundamental to packet switching.
[750.00s -> 758.00s]  If we didn't have packet buffers, then we'd lose a packet every time two packets showed up at the same time wanting to travel across a link.
[759.00s -> 761.00s]  So packet buffers are our friends.
[761.00s -> 765.00s]  But the packet buffers themselves are going to change our expression for the end-to-end delay.
[766.00s -> 771.00s]  If our packet arrives, and the queue has some packets in it,
[771.00s -> 776.00s]  then it's going to delay the time that it can be forwarded onto the next link,
[776.00s -> 782.00s]  because it can have to wait for the packets that are ahead of it to leave first before our packet gets to go.
[783.00s -> 789.00s]  So I've just shown this here as Q2 of T, meaning it's going over the link from S2.
[789.00s -> 793.00s]  And I've said it's Q2 of T because it's going to vary with time.
[793.00s -> 798.00s]  It's going to depend on how many other packets are showing up from other users.
[799.00s -> 806.00s]  So if there are three packets ahead of us, we'll have to wait for three packetization delays before it's our turn to go.
[807.00s -> 812.00s]  I've shown this just in one queue. Of course, this can be in all of the switches along the way.
[812.00s -> 816.00s]  It just makes the figure a bit more complicated, so I've just shown it in Q2.
[817.00s -> 821.00s]  So our end-to-end delay now has a third component to it.
[821.00s -> 827.00s]  It has in it the packetization delay that we saw before, that's P over R sub i.
[828.00s -> 833.00s]  Then it has the propagation delay over the link.
[833.00s -> 841.00s]  And then it has this new expression, Q i of T, which is the delay of the packet in the queue waiting for other packets.
[841.00s -> 844.00s]  And this could be zero if there are no other packets, of course.
[844.00s -> 852.00s]  But in general, it's going to be some non-deterministic value, because we don't know whoever else is sending packets at the same time.
[855.00s -> 861.00s]  So the most important thing to note here is, everything is deterministic except the queuing delay.
[861.00s -> 866.00s]  P over R sub i, L i over C, they're both deterministic.
[866.00s -> 870.00s]  It's Q i of T, the queuing delay, that is the variable component.
[871.00s -> 878.00s]  And to convince you that really in practice there is variability, I'm going to show you an example in a moment.
[878.00s -> 879.00s]  One last thing.
[879.00s -> 885.00s]  So you may have noticed that I use the British spelling for queuing.
[885.00s -> 893.00s]  That's not because I'm English, but it's very common when talking about the Internet to spell queuing, Q-U-E-U-E-I-N-G.
[893.00s -> 895.00s]  Seems like too many vowels, I know.
[895.00s -> 902.00s]  But this was the convention adopted by Kleinrock, one of the pioneers and inventors of the Internet, back in the 1960s.
[902.00s -> 906.00s]  But you'll see both, both the UK and the US spelling, and that's just fine.
[906.00s -> 913.00s]  So in summary, here's our overall expression for the end-to-end delay.
[913.00s -> 917.00s]  It's taking into consideration the queuing delay at each packet switch along the way.
[917.00s -> 920.00s]  It's really important to remember that the queuing delay is unpredictable.
[920.00s -> 923.00s]  It depends on the traffic sent by other users in the network.
[923.00s -> 926.00s]  As far as we're concerned, the queuing delay is a random variable.
[926.00s -> 930.00s]  It's the only random variable in our expression for end-to-end delay.
[930.00s -> 933.00s]  Everything else is deterministic.
[933.00s -> 938.00s]  So in case you don't believe me that the end-to-end delay is unpredictable, we're going to measure it.
[938.00s -> 947.00s]  I'm going to use a very widely used tool called PING, P-I-N-G, to measure the end-to-end delay between my computer and other computers in the Internet.
[947.00s -> 950.00s]  PING is going to measure this end-to-end delay.
[950.00s -> 953.00s]  In fact, it's going to measure the round trip time, which is the end-to-end delay.
[953.00s -> 956.00s]  It's the sum of the end-to-end delay in both directions.
[956.00s -> 961.00s]  You'll find the PING command on your computer, and you can use it to repeat the measurements I'm about to do on your own computer.
[961.00s -> 965.00s]  And it's kind of a fun thing to do.
[965.00s -> 970.00s]  We can measure the delay of packets across the Internet using the PING command.
[970.00s -> 973.00s]  I'm going to show you an example of the PING command right now.
[973.00s -> 979.00s]  So I'm going to PING from my computer to Princeton.edu.
[979.00s -> 983.00s]  Princeton is a university in New Jersey in the United States.
[983.00s -> 988.00s]  It's about 4,000 kilometers or 2,500 miles from where I am.
[988.00s -> 999.00s]  And as I do this, you can see over on the right-hand side, it's showing me the time that it takes for the packets that I send to go to Princeton and back again.
[999.00s -> 1001.00s]  So let's see if I can highlight these.
[1001.00s -> 1008.00s]  So if you see them like here, these are the times of the packets to go there and back again.
[1008.00s -> 1015.00s]  So those numbers there are about 100 milliseconds, corresponding to the time that it takes for a packet to go there and back, or the round-trip time.
[1015.00s -> 1027.00s]  Let's see how that compares, say, by PING to let's try the University of Tsinghua University in Beijing in China.
[1027.00s -> 1029.00s]  So we're going to see that's a lot further away.
[1029.00s -> 1033.00s]  That's about 10,000 kilometers away from me, or about 6,000 miles.
[1033.00s -> 1036.00s]  And you can see that the PING times are much greater.
[1036.00s -> 1046.00s]  So if I can just highlight those, we can see those there, more like 200 milliseconds.
[1046.00s -> 1054.00s]  So I use PING to measure a few hundred RTT values from my computer at Stanford to Princeton.
[1054.00s -> 1060.00s]  And as I said earlier, it's about 4,000 kilometers or 2,500 miles away.
[1060.00s -> 1068.00s]  The graph shows the CDF, that's the cumulative distribution function, for the values that I measured.
[1068.00s -> 1078.00s]  So 0%, this means that none of the values were below this value here, which is about 100 milliseconds.
[1078.00s -> 1084.00s]  And 100% of them were less than, let's say, 300 milliseconds.
[1084.00s -> 1087.00s]  A little hard to tell on this graph here.
[1087.00s -> 1096.00s]  So this shows the range and also the variation in the values that I measured.
[1096.00s -> 1103.00s]  And the overall variation is about 50 milliseconds.
[1103.00s -> 1110.00s]  And the 90% of the samples fell between 100 and 120 milliseconds.
[1110.00s -> 1119.00s]  Now let's look at what happened when I repeated the experiment from Stanford to Tsinghua University, which is in Beijing in China.
[1119.00s -> 1124.00s]  It's a lot further away, it's about 10,000 kilometers away, or 6,000 miles.
[1124.00s -> 1131.00s]  And as I would expect, the RTT values are much larger, because the propagation delay is much higher.
[1131.00s -> 1137.00s]  But also notice that the RTT samples have much greater variance.
[1137.00s -> 1142.00s]  They vary by a lot more. Look at this value over here, this range of values.
[1142.00s -> 1148.00s]  They're varying by a lot more than the ones over the shorter length from Stanford to Princeton.
[1148.00s -> 1152.00s]  So that variation here comes from the queuing delay.
[1152.00s -> 1164.00s]  My packets are encountering more queues, more congestion, more other users traffic when they're going across the Pacific to China.
[1164.00s -> 1170.00s]  My packets meet other packets in the router buffers along the way, and so they get held up, they have to wait for longer.
[1170.00s -> 1175.00s]  And I guess probably because there are more hops, I'm more likely to encounter other people's packets along the way.
[1175.00s -> 1184.00s]  With a range of about 200 milliseconds, it's about 320 down here, and maybe they're going up to about 520.
[1184.00s -> 1191.00s]  With a range of about 200 milliseconds, the queuing delay is making up almost half of the overall end-to-end delay.
[1191.00s -> 1199.00s]  So that's pretty high. In fact, that's kind of unusually high, which is why I showed you this as an example, just to get the point across.
[1199.00s -> 1203.00s]  In summary, the end-to-end delay is determined by three components.
[1203.00s -> 1209.00s]  The first is the propagation delay along the links, which is determined by the lengths of the links and the propagation speed.
[1209.00s -> 1216.00s]  The second is the packetization delay, which is determined by the length of the packet and the data rate of each link.
[1216.00s -> 1224.00s]  The third is the queuing delay, which is determined by the congestion and the queuing delay in the buffers and the routers along the path.
[1224.00s -> 1228.00s]  This is the end of the video on end-to-end delay in packet switching.
[1228.00s -> 1240.00s]  In the next video, I will be explaining what some of the consequences are of this variable queuing delay, particularly on real-time applications, which frequently use playback buffers to absorb this variation.
