# Detected language: en (p=1.00)

[0.00s -> 4.00s]  So in this video about the physical layer, I'm going to talk about two things.
[4.00s -> 7.00s]  First, capacity. That is, how do we determine how many
[7.00s -> 10.00s]  bits per second a given physical layer can support?
[10.00s -> 13.00s]  And then modulation. How is it that you represent these
[13.00s -> 16.00s]  bits on the medium itself? So it turns out that there's a
[16.00s -> 20.00s]  theoretical limit on how much information a given channel can carry.
[20.00s -> 24.00s]  Well, in this case, a channel means a medium in which you're putting your
[24.00s -> 27.00s]  information. This channel could be, say, a wire or
[27.00s -> 31.00s]  wireless. It could be sound waves, whatever you want.
[31.00s -> 36.00s]  It's just a term that's used to talk about the way in which the information is being
[36.00s -> 39.00s]  communicated. And so this limit is called the Shannon
[39.00s -> 42.00s]  limit, after Claude Shannon who established it.
[42.00s -> 46.00s]  And so it turns out that if you look at a given communication channel, and
[46.00s -> 50.00s]  under a certain set of assumptions, which often hold pretty well.
[50.00s -> 54.00s]  This is a very good approximation. It gives you good senses to what's
[54.00s -> 58.00s]  possible. The channel capacity, or the number of
[58.00s -> 64.00s]  bits per second you can send over a given channel is B, base two log one
[64.00s -> 68.00s]  plus the signal to noise ratio, where B is the bandwidth of your
[68.00s -> 72.00s]  communication. That is, what's the range of
[72.00s -> 76.00s]  frequencies you can use. This is assuming that we're doing
[76.00s -> 81.00s]  things with sinusoidal waves, etc. S is the signal strength, so how
[81.00s -> 85.00s]  strong is the signal when it arrives at the receiver.
[85.00s -> 88.00s]  And N is the noise. So any receiver is going to have some
[88.00s -> 91.00s]  kind of noise. In the same way that when you're
[91.00s -> 95.00s]  listening, you might think you hear silence, but there are sounds that are
[95.00s -> 98.00s]  too faint for you to hear. It's because those sounds are below
[98.00s -> 101.00s]  essentially the noise sensitivity of your ears.
[101.00s -> 104.00s]  Or in the same way, if there's a white noise generator in the room, it can
[104.00s -> 108.00s]  make it harder to hear things because there's this noise.
[108.00s -> 112.00s]  And so all communication devices have noise.
[112.00s -> 115.00s]  Often it's just due to thermal properties of the hardware.
[115.00s -> 118.00s]  They're just stray electrons from thermal effects.
[118.00s -> 120.00s]  And so that introduces some noise into the system.
[120.00s -> 123.00s]  It's a big thing when you're engineering them, how do you bring the
[123.00s -> 126.00s]  noise down. And so what the, the basic point
[126.00s -> 130.00s]  here is that the amount that we can send is proportional to the amount of
[130.00s -> 135.00s]  bandwidth we have, like how large a chunk of frequencies can we use.
[135.00s -> 139.00s]  And then the signal-to-noise ratio. Now, if we want a higher signal-to-noise
[139.00s -> 142.00s]  ratio, there's just the signal divided by the noise.
[142.00s -> 145.00s]  It requires either you have lower noise, that can be really expensive.
[145.00s -> 148.00s]  It's, you know, harder to make hardware with, with lower noise.
[148.00s -> 151.00s]  Or a stronger signal. It requires that the signal be
[151.00s -> 153.00s]  louder. This is for example why when you
[153.00s -> 155.00s]  have more bars on your phone it goes faster.
[155.00s -> 158.00s]  It's because the signal-to-noise ratio of the data is faster because the
[158.00s -> 162.00s]  signal-to-noise ratio is higher. It turns out that building
[162.00s -> 166.00s]  hardware for very high bandwidth, so signals that have a tremendous bandwidth,
[166.00s -> 169.00s]  is actually really hard. All these complications come into play.
[169.00s -> 172.00s]  So it's not like you can just easily build a communication system with
[172.00s -> 175.00s]  arbitrary channel capacity. There are always engineering things
[175.00s -> 180.00s]  which come into play, which is why we don't suddenly see, you know, a terabit
[180.00s -> 184.00s]  Ethernet. But so fundamentally when we're talking
[184.00s -> 188.00s]  about the capacity of a channel, we're talking about bandwidth and signal-to-noise.
[188.00s -> 191.00s]  The way to think about this is, and this is how we generally represent
[191.00s -> 196.00s]  signals, is in terms of analog signals. So think sinusoids.
[196.00s -> 201.00s]  And so when we're talking about sinusoidal waves, here's a simple,
[201.00s -> 205.00s]  here's a simple one here. There are a couple properties we care
[205.00s -> 209.00s]  about that I'm gonna talk about in the rest of this and some future videos.
[209.00s -> 215.00s]  The first is the amplitude of the wave. So this is, so the amplitude denotes
[215.00s -> 220.00s]  the actual, one way to think of it is that, how loud it is, the signal
[220.00s -> 230.00s]  strength, loudness, signal strength. Second property is the wavelength.
[230.00s -> 236.00s]  So how long is one of these waves? So the speed of light is approximately,
[236.00s -> 241.00s]  so c, a, you know, in vacuums, there's approximately one foot per
[241.00s -> 245.00s]  nanosecond. That's a good rough rule of thumb.
[245.00s -> 258.00s]  And so one billion feet per second. And so if, for example, I'm sending
[258.00s -> 268.00s]  a signal whose wavelength is one foot, this would mean that it has a wavelength
[268.00s -> 272.00s]  of one foot. Since the wave is traveling one billion
[272.00s -> 276.00s]  feet per second, this means that there must be one billion waves per second.
[276.00s -> 279.00s]  It's because there's, this wave is traveling at a billion feet per second,
[279.00s -> 282.00s]  wavelength is a foot, it must have a billion waves per second.
[282.00s -> 285.00s]  So this gives me the frequency. So how many waves do I expect a second?
[285.00s -> 289.00s]  So one billion per second turns out to be one gigahertz.
[289.00s -> 294.00s]  So one gigahertz wave in, this is, you know, electromagnetics, this is
[294.00s -> 299.00s]  light, just at lower frequencies. A one foot, a one gigahertz signal
[299.00s -> 305.00s]  is, has a wavelength of about a foot. So, Wi-Fi today, for example, operates
[305.00s -> 311.00s]  at 2.4 gigahertz or around 5 gigahertz. So these have wavelengths of, you
[311.00s -> 318.00s]  know, approximately, you know, five inches and, you know, 2.4 inches.
[318.00s -> 324.00s]  So here I'm talking about the frequency, the wavelength of a given wave,
[324.00s -> 328.00s]  the amplitude of a given wave. But it turns out that we send signals
[328.00s -> 331.00s]  you don't use a single frequency, you actually use a range of frequencies.
[331.00s -> 335.00s]  The bandwidth is the size of the frequency ranges that we use.
[335.00s -> 339.00s]  For example, if you look at one Wi-Fi standard 802.11b, it's an older one,
[339.00s -> 343.00s]  it's gonna, you use that as a common example because it's one of the
[343.00s -> 347.00s]  simpler ones since it's older. In 802.11b, if you, those of you who've
[347.00s -> 352.00s]  used it, you have to select a channel. So channels one through eleven.
[353.00s -> 360.00s]  And often people use one six and eleven. Each of these channels is 20 megahertz
[360.00s -> 366.00s]  wide. And so when you look at a frequency map for 802.11b, you can see
[366.00s -> 371.00s]  that all these channels, you know, here's one and here's eleven, and they
[371.00s -> 375.00s]  take up about 20 megahertz of the frequency range, like so.
[376.00s -> 380.00s]  And so you actually use a range of frequencies, and I'll show you sort of
[380.00s -> 386.00s]  why this happens and how this happens. So finally there's what we call phase.
[386.00s -> 390.00s]  And so this is actually the timing of the waves within a wavelength.
[390.00s -> 395.00s]  So here we have, here's a wave which is at this particular phase where the
[395.00s -> 398.00s]  peak is occurring here. So let's call this T0.
[399.00s -> 404.00s]  It's of course possible to send this exact same wave.
[407.00s -> 411.00s]  But at a different phase. For example, we could send it like this.
[414.00s -> 420.00s]  It's the same wave, but its phase is, its phase is offset by one half of the
[420.00s -> 427.00s]  wavelength, and therefore 180 degrees. And so it turns out that things we do to
[427.00s -> 431.00s]  control, as we'll see in a second, that we do to control waves, that we do to
[431.00s -> 434.00s]  send signals involve changing the amplitude of waves, changing the
[434.00s -> 437.00s]  frequency of waves, as well as changing the phase of these waves.
[437.00s -> 440.00s]  But fundamentally, these waves are what's going on underneath in the system.
[440.00s -> 443.00s]  So given that we're using waves, there's a whole bunch of ways we can
[443.00s -> 446.00s]  represent bits. This is one of the simplest ways, something called
[446.00s -> 450.00s]  amplitude shift keying, or ASK. And what this, this process is called
[450.00s -> 454.00s]  modulation. How do I take a signal, or take a particular bit of, piece of
[454.00s -> 458.00s]  data, and then modulate my waves to represent that signal?
[458.00s -> 461.00s]  So here, to represent that data. How do I modulate the signal to represent
[461.00s -> 463.00s]  the data? So here, for example, I have an
[463.00s -> 467.00s]  amplitude shift keying where one has a small amplitude, I'm sorry, zero has a
[467.00s -> 470.00s]  small amplitude, and one has a larger amplitude.
[470.00s -> 473.00s]  So I want to send a zero, I send this smaller wave.
[473.00s -> 476.00s]  And when I want to send a one, I send this larger wave.
[476.00s -> 479.00s]  Another approach that you can use is something called frequency shift keying,
[479.00s -> 482.00s]  where you use two separate frequencies. And so here's a one, and here's a
[482.00s -> 484.00s]  zero. The zero happens to be the higher
[484.00s -> 486.00s]  frequency. The one is the lower frequency.
[486.00s -> 489.00s]  And as I want to send out a stream of zeros and ones, I just move these
[489.00s -> 492.00s]  frequencies back and forth. Oh, I'm sending one, one, one, so
[492.00s -> 495.00s]  he's longer, longer, longer than zero, zero, zero, zero, shorter,
[495.00s -> 498.00s]  shorter, shorter, shorter. The other side can decode these and
[498.00s -> 500.00s]  then figure out what bits are being sent.
[500.00s -> 504.00s]  So amplitude shift keying turns out to be very, it's very commonly used,
[504.00s -> 507.00s]  especially in wired networks. And the reason is that when you have
[507.00s -> 510.00s]  a wire, your medium is controlled. The signal you put on one side, it
[510.00s -> 513.00s]  decreases a little bit on the other side, but not by very much.
[513.00s -> 517.00s]  Wires do not have a lot of resistance. That's why we use them to carry power.
[517.00s -> 522.00s]  And so, amplitude shift keying is commonly used in wired systems, just
[522.00s -> 525.00s]  because it's very simple and it works great.
[525.00s -> 529.00s]  So, most common wired Ethernet today uses amplitude shift keying.
[529.00s -> 535.00s]  For example, 100 base T and 1000 base T, this is 100 megabit and gigabit
[535.00s -> 540.00s]  use what's called PAM5 which means five levels of amplitude modulation.
[540.00s -> 544.00s]  They're called pulses because you're sending these pulses at these
[544.00s -> 548.00s]  different amplitudes. So think of these basically as
[548.00s -> 552.00s]  voltages, minus two, minus one, zero, plus one, plus two.
[552.00s -> 557.00s]  And so, you're sending these different voltages along the wire.
[557.00s -> 562.00s]  Turns out ten base, ten G base T or ten gigabit Ethernet, and one of the
[562.00s -> 567.00s]  sort of upcoming standards people are adopting needs to use more levels of
[567.00s -> 571.00s]  amplitudes in order to get all of its data through.
[571.00s -> 575.00s]  And so, it uses PAM16, so sixteen levels rather than five.
[575.00s -> 580.00s]  So, another form of modulation that's really popular is what's called phase
[580.00s -> 583.00s]  shift keying. So, unlike amplitude shift keying,
[583.00s -> 585.00s]  you're adjusting the amplitude of the waves.
[585.00s -> 587.00s]  Or frequency shift keying, we're using different frequencies.
[587.00s -> 590.00s]  With phase shift keying, you adjust the phase of the waves.
[590.00s -> 595.00s]  So here, for example, let's say zero, this is a phase of zero degrees.
[595.00s -> 599.00s]  But then, to send a one, as you can see, my phase is reversed.
[599.00s -> 603.00s]  This is a phase of 180 degrees, right, or minus 180 degrees.
[603.00s -> 607.00s]  The two are the same. And then, here to send a zero again,
[607.00s -> 610.00s]  I start sending at a phase of zero degrees again.
[610.00s -> 615.00s]  So, phase shift keying is really useful when your channel, when your medium is
[615.00s -> 619.00s]  such that you can have significant variations in signal strength.
[619.00s -> 622.00s]  So, amplitude shift keying, you need to be able to figure out what all the
[622.00s -> 625.00s]  different amplitudes are. So, when the amplitudes, when the actual
[625.00s -> 628.00s]  attenuation with signal strength is stable, like in a wire, that's great.
[628.00s -> 632.00s]  But, for example, in wireless situations amplitude is a bit harder.
[632.00s -> 636.00s]  Phase is much, can be easier. So, situations where phase shift keying
[636.00s -> 640.00s]  is used are, say, a DSL, digital subscriber lines, you know, that are along
[640.00s -> 644.00s]  long phone lines where there could be weather and wire shaking and bad
[644.00s -> 646.00s]  connections. But really long wires.
[646.00s -> 649.00s]  Cable modems, right, that are stretching out through an entire neighborhood.
[649.00s -> 652.00s]  Wireless systems, these all use phase shift keying.
[652.00s -> 656.00s]  Some will also use amplitude, but they, unlike, you know, wired
[656.00s -> 658.00s]  Ethernet, all these systems use phase.
[658.00s -> 663.00s]  And so, one kind of phase shift keying is binary phase shift keying, or BPSK.
[663.00s -> 668.00s]  And so, you basically have two phases, zero, zero degrees, and pi, or 180
[668.00s -> 672.00s]  degrees. And so, like in that prior picture,
[672.00s -> 676.00s]  you're either sending something at this phase.
[676.00s -> 684.00s]  Let's say that's zero. Or you're sending it at this phase.
[684.00s -> 689.00s]  Which is, say, 180 degrees. So, this is 180 degrees.
[689.00s -> 696.00s]  Pi. This is zero.
[696.00s -> 700.00s]  Zero. So, for example, BPSK is used in
[700.00s -> 705.00s]  802.11b and older Wi-Fi standard at low speeds, one megabit and two megabit per
[705.00s -> 709.00s]  second. There's also a quadrature phase shift
[709.00s -> 712.00s]  keying, QPSK, where now we have four phases.
[712.00s -> 717.00s]  As you can imagine, just as we have zero and 180 degrees, with QPSK, we have
[717.00s -> 722.00s]  zero, 90 degrees, 180 degrees, 270, or zero, pi over two, pi, three pi over
[722.00s -> 727.00s]  two, radians and degrees respectively. So, it turns out QPSK is also used in
[727.00s -> 731.00s]  this older Wi-Fi standard, 802.11b. It's used at the higher speeds, 5.5
[731.00s -> 734.00s]  megabits per second and 11 megabits per second.
[734.00s -> 738.00s]  Now, one thing that should come out from this is that the reason why we
[738.00s -> 742.00s]  might use QPSK versus BPSK or PAM-16 rather than PAM-5 is that for a given
[742.00s -> 745.00s]  signal we're sending, we can send more information.
[745.00s -> 750.00s]  So, for example, BPSK, each wave we send carries one bit of information.
[750.00s -> 754.00s]  Is it zero or pi? In contrast for QPSK, each symbol that
[754.00s -> 759.00s]  we send on the waves, each little chunk of data we're sending at the physical
[759.00s -> 763.00s]  layer contains two bits. Is it zero, pi over two, pi, or three pi
[763.00s -> 765.00s]  over two? You could say represent those as
[765.00s -> 768.00s]  zero, zero, zero, one, one, zero, one, one.
[768.00s -> 771.00s]  That's not actually how it's done, but the idea is you can actually, by having
[771.00s -> 775.00s]  these denser representations, you're sending more information per unit time.
[775.00s -> 778.00s]  Now, one reason why phase shift keying is very popular is it actually
[778.00s -> 780.00s]  turns out it's very easy to shift phase.
[780.00s -> 785.00s]  So, for example, here, if I just have a carrier wave at, say, zero degrees, and
[785.00s -> 790.00s]  another carrier wave, you know, at minus 90 degrees, then any linear combination
[790.00s -> 793.00s]  of these two allows me to create any intermediate frequency.
[793.00s -> 797.00s]  So, for example, here, if I combine zero degrees with minus 90 degrees, just add
[797.00s -> 800.00s]  these two waves up, I'll get something at minus 45 degrees.
[800.00s -> 804.00s]  That's if it's a, you know, sort of one to one equality.
[804.00s -> 810.00s]  If, for example, instead I did 0.5, one, then we'd have something a little closer
[810.00s -> 816.00s]  to, to the zero degrees, right? Assuming that this is the minus 90 degrees, and
[816.00s -> 821.00s]  this is the zero degrees. Similarly, if I did rather than one,
[821.00s -> 826.00s]  one, if I did minus one, one, so this is minus 90 degrees, this is zero
[826.00s -> 832.00s]  degrees, then what we'd see is rather than a wave between these two, the wave
[832.00s -> 838.00s]  would be. The wave would be here, right?
[838.00s -> 842.00s]  It would be at plus 45 degrees, with this setting.
[842.00s -> 846.00s]  And so, just for these two things, you can combine and create any intermediate
[846.00s -> 849.00s]  frequency you want, which turns out to be really useful in hardware.
[849.00s -> 852.00s]  And in fact, that's exactly how hardware does it, using something called
[852.00s -> 855.00s]  IQ modulation. So, I means the in-phase component, so
[855.00s -> 858.00s]  at zero degrees, Q is the quadrature component at minus 90 degrees.
[858.00s -> 863.00s]  This is just a, a complex way of saying, hey, if we want to create any, any phase
[863.00s -> 868.00s]  between zero and, you know, say 300, you know, zero and basically minus
[868.00s -> 873.00s]  zero, wrapping around, we can just combine these two I and Q with some
[873.00s -> 878.00s]  linear factor and get that. So, for example, let's look at those
[878.00s -> 881.00s]  two, those two things we had of BPSK and QPSK.
[881.00s -> 885.00s]  So, BPSK has two phases, zero and 180 degrees.
[885.00s -> 893.00s]  What are the IQ values of those? Well, so for zero degrees, it's gonna be one,
[893.00s -> 897.00s]  comma, zero, right? We want fully at zero degrees.
[897.00s -> 902.00s]  For 180 degrees, well, that's the opposite of zero, right?
[902.00s -> 907.00s]  It's, if you were to think about it, you know, on the unit circle, say,
[907.00s -> 912.00s]  here's zero, here's 180 degrees. So, just as here we have plus one, here
[912.00s -> 916.00s]  we're gonna have minus one. So, minus one, comma, zero.
[916.00s -> 922.00s]  For QPSK, we're gonna have four phases, let's say zero, 270, 180, and 90.
[922.00s -> 925.00s]  So again, zero is gonna be one, comma, zero.
[925.00s -> 931.00s]  But now 270, right, 270 is down here, right?
[931.00s -> 939.00s]  So here's minus 90 slash 270. So 270 is going to be zero, comma, one.
[939.00s -> 944.00s]  180 is gonna be, just like in BPSK, minus one, comma, zero.
[944.00s -> 950.00s]  And 90 is going to be zero, comma, minus one.
[950.00s -> 955.00s]  And so we can, just by changing the scaling factors of the I and the Q,
[955.00s -> 959.00s]  create any phase we want of a signal. And that's exactly kinda what it looks
[959.00s -> 962.00s]  like in hardware, is that we have these IQ values coming in, these digital
[962.00s -> 966.00s]  values, then we have these two carrier frequencies, and we end up adding them
[966.00s -> 970.00s]  up to come out on the RF, since then what comes out of the antenna.
[970.00s -> 973.00s]  This is actually how you build a hardware, these IQ, these IQ values.
[973.00s -> 977.00s]  But what's really valuable, and the reason why I'm going into them about
[977.00s -> 980.00s]  IQ constellations, is that they actually lend themselves to a really,
[980.00s -> 984.00s]  really simple and easy to understand graphical representation of what's going
[984.00s -> 988.00s]  on down at the physical layer. And so the way I think of this, if we
[988.00s -> 992.00s]  take these IQ values and we just represent them on a 2D grid, right, we
[992.00s -> 995.00s]  can use what's called an IQ constellation, this 2D plot.
[995.00s -> 1000.00s]  In this case, in these 2D plots, the angle of your vector represents the
[1000.00s -> 1005.00s]  phase of the signal, right, like here say we have 45 degrees, right, here we
[1005.00s -> 1009.00s]  have 135 degrees. And then the length of this vector
[1009.00s -> 1013.00s]  represents the amplitude of the signal. So, if we look at something like
[1013.00s -> 1017.00s]  on-off keying, where you either send something or it's silent, we see here's
[1017.00s -> 1021.00s]  an amplitude of one, amplitude of zero. There's more on-off keying, right,
[1021.00s -> 1024.00s]  there's no change in the phase. Amplitude shift keying, where we have
[1024.00s -> 1027.00s]  two different amplitudes used. See, here's a one, and here's a zero.
[1027.00s -> 1031.00s]  We're just changing the amplitudes. We're not actually changing the phase,
[1031.00s -> 1036.00s]  we're just changing the value of I. BPSK, remember there are two phases,
[1036.00s -> 1039.00s]  zero and 180, and so that's what we see here.
[1039.00s -> 1043.00s]  So here is 180, to say represent the one.
[1043.00s -> 1046.00s]  And here is zero, say to represent the zero.
[1046.00s -> 1050.00s]  QPSK also has four points, with these four different phases.
[1050.00s -> 1054.00s]  I also could have rotated them and say drawn them like this, but it's a little
[1054.00s -> 1058.00s]  easier to see them when there are these four corners like this.
[1058.00s -> 1061.00s]  This is a way to represent what the wireless signal is.
[1061.00s -> 1064.00s]  It's this nice pictorial representation. When we start talking about signal on
[1064.00s -> 1068.00s]  noise and those ratios, things will start to make a little more sense.
[1068.00s -> 1071.00s]  It'll be a really clear depiction of what's happening.
[1071.00s -> 1075.00s]  And so just recall, we can represent any intermediate phase from this zero to
[1075.00s -> 1078.00s]  minus 90. There's just some linear combination of
[1078.00s -> 1081.00s]  those two. Now at some point, at the link layer, we
[1081.00s -> 1083.00s]  have bits. Bits are coming in.
[1083.00s -> 1086.00s]  We have some packet, you know, from the network layer.
[1086.00s -> 1089.00s]  And we have some frame at the link layer with some bits, zero, one, one,
[1089.00s -> 1093.00s]  zero, zero, one, one, organized into bytes, into octets, however.
[1093.00s -> 1097.00s]  But down at the physical layer, we don't necessarily, can't necessarily
[1097.00s -> 1100.00s]  transmit a whole byte. It might be that we can only
[1100.00s -> 1102.00s]  transmit a couple bits at a, at a time.
[1102.00s -> 1105.00s]  And so in the physical layer, we talk about symbols.
[1105.00s -> 1109.00s]  And the symbol is the unit of, is the unit of transfer that the physical layer can
[1109.00s -> 1112.00s]  provide. So often, we talk about things at
[1112.00s -> 1115.00s]  the link layer. We talk about, oh, we add a byte.
[1115.00s -> 1118.00s]  But that might not be the boundary down at the physical layer.
[1118.00s -> 1122.00s]  The reason is, as I talked about before, a symbol can contain more than one bit.
[1122.00s -> 1125.00s]  So BPSK has one bit per symbol. There's two phases.
[1125.00s -> 1129.00s]  QPSK has four phases, has two bits per symbol.
[1129.00s -> 1134.00s]  But then you also get situations like like PAM5 that's used in 100 megabit and
[1134.00s -> 1139.00s]  one gigabit ethernet on a CAT5 cable, where there's these five voltage levels.
[1139.00s -> 1143.00s]  There are five different symbols that you can use.
[1143.00s -> 1148.00s]  And that doesn't necessarily even map perfectly to a number of bits, right?
[1148.00s -> 1153.00s]  Five symbols is just over two bits. It's, it's important to realize that
[1153.00s -> 1157.00s]  although up at the link layer even passed down to the physical area of a
[1157.00s -> 1161.00s]  sequence of bits, there's this transformation that occurs, turning that
[1161.00s -> 1165.00s]  sequence of bits into a sequence of symbols down at the physical layer.
[1169.00s -> 1175.00s]  So finally I've talked about amplitude keying, I've talked about phase keying.
[1175.00s -> 1179.00s]  There's this approach you use today. It's very, very common.
[1179.00s -> 1183.00s]  You see it in almost all modern communication systems called QAM, which
[1183.00s -> 1189.00s]  really stands for quadrature amplitude modulation, or basically this means phase
[1189.00s -> 1195.00s]  and amplitude keying. At the same time.
[1195.00s -> 1201.00s]  And so, whereas ASK, amplitude shift keying, is only the amplitude and
[1201.00s -> 1205.00s]  phase shift keying is only the phase, in QAM we use both.
[1205.00s -> 1209.00s]  So to give you an example, the way this is usually talked about, say 16 QAM
[1209.00s -> 1213.00s]  means that we have 16 different symbols, and so we can represent for each symbol,
[1213.00s -> 1217.00s]  we can represent four bits. 256 QAM means there's 256 different
[1217.00s -> 1221.00s]  symbols, means we can represent for each symbol, we can represent eight bits.
[1221.00s -> 1227.00s]  And so returning to the IQ plot, or the modulation plot, here's what 16 QAM looks
[1227.00s -> 1229.00s]  like. So this is the constellation, the IQ
[1229.00s -> 1233.00s]  constellation used in HSPDA, which is a 3G data standard.
[1234.00s -> 1238.00s]  And so, as you can see, there are these values from three, three to minus three,
[1238.00s -> 1241.00s]  minus three, and they map to different bits.
[1241.00s -> 1245.00s]  And so here I've shown in gray the I and Q values, right?
[1245.00s -> 1250.00s]  So here's an I of three, a Q of one, I of three, Q of three, I of minus
[1250.00s -> 1255.00s]  one, Q of three, Q of one, sorry. And then what the represented bits
[1255.00s -> 1259.00s]  are above the physical layer. And so here's an example IQ
[1259.00s -> 1263.00s]  constellation for 16 QAM. As we can see, it's adjusting not only
[1263.00s -> 1268.00s]  the amplitude, that is the length of the vector coming out of the, the origin, but
[1268.00s -> 1273.00s]  also the phase, which is the orientation of the vector coming out of
[1273.00s -> 1278.00s]  the origin. Here's an example IQ constellation used in
[1278.00s -> 1284.00s]  modern 3G systems, 16 QAM, 16 different symbols, and here is how bits map to
[1284.00s -> 1294.00s]  these symbols. So, for example, if I wanted to send 1011, 1001, I would send
[1294.00s -> 1302.00s]  1011. So I'd send this first, right? This would be the first symbol that I
[1302.00s -> 1312.00s]  would send, number one. Then 1001, I would send this symbol, second.
[1312.00s -> 1318.00s]  And so if we're to go down and dig into and see what's happening down in
[1318.00s -> 1324.00s]  the physical layer, we're going to see a signal transmitted with a phase of
[1324.00s -> 1330.00s]  what's essentially 135 degrees, right? This is 135 degrees.
[1330.00s -> 1338.00s]  And an amplitude, let's say, of X. Then the next symbol is going to be with this
[1338.00s -> 1344.00s]  angle, right, with this phase, which is, you know, approximately, let's say, 105
[1344.00s -> 1347.00s]  degrees. And a slightly smaller amplitude, right,
[1347.00s -> 1351.00s]  because this vector is longer. And that's what you actually see in terms
[1351.00s -> 1356.00s]  of the ways in the physical layer. So, what's used today?
[1356.00s -> 1361.00s]  Well, AS amplitude shift keying is basically all the wire that uses amplitude
[1361.00s -> 1365.00s]  shift keying. It's very rare for communication systems to use frequency
[1365.00s -> 1369.00s]  shift keying. There are some examples like the National Weather Service's
[1369.00s -> 1373.00s]  Weather Radio, and Bluetooth actually uses it in some forms.
[1373.00s -> 1378.00s]  Binary phase shift keying is used basically by all the Wi-Fi standards,
[1378.00s -> 1383.00s]  ABGN. It's also used in WiMAX. Quadrature phase shift keying is used
[1383.00s -> 1386.00s]  in Wi-Fi. There's low power wireless, like Zigbee,
[1386.00s -> 1393.00s]  called 802.15.4. 3G, LTE, WiMAX. 16 QAM is used in Wi-Fi, as well as these
[1393.00s -> 1398.00s]  data standards for cellular phones, for mobile phones, mobile telephony.
[1398.00s -> 1402.00s]  64 QAM is used in Wi-Fi, as well as LTE and WiMAX.
[1402.00s -> 1407.00s]  And so you can see that there are these, the older, that the more modern
[1407.00s -> 1411.00s]  standards, the ones that are using the denser constellations, people have made
[1411.00s -> 1413.00s]  faster and faster. Here's an overview.
[1413.00s -> 1418.00s]  There are many different ways that you can take your bits and then represent
[1418.00s -> 1422.00s]  them in terms of a physical medium. Convert them into voltages, phases,
[1422.00s -> 1426.00s]  frequencies, etc. Wired Ethernet and wired systems often
[1426.00s -> 1431.00s]  use amplitude to represent signals. Whereas most technologies today, like
[1431.00s -> 1437.00s]  wireless technologies or things that are over less controlled media, like cable
[1438.00s -> 1442.00s]  modems, DSL, use phase shift keying or a combination of phase and amplitude
[1442.00s -> 1444.00s]  called QAM, quadrature amplitude modulation.
[1444.00s -> 1448.00s]  And one of the key things is that you can represent a QAM signal, in fact,
[1448.00s -> 1451.00s]  any of these, as a linear combination of two things.
[1451.00s -> 1456.00s]  The in-phase component I at zero degrees, and the quadrature component Q at
[1456.00s -> 1459.00s]  minus 90 degrees. This is actually how circuits do it
[1459.00s -> 1462.00s]  today. And what's really nice is that it
[1462.00s -> 1467.00s]  gives you a very good pictorial representation of what the signal looks
[1467.00s -> 1472.00s]  like and how it's controlled and how it's modulated and how those map to bits.
