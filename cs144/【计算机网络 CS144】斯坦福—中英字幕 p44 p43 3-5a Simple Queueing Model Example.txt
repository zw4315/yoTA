# Detected language: en (p=1.00)

[0.00s -> 5.36s]  The video included a quick worked example. In case you found the example hard to follow,
[5.36s -> 9.68s]  in this short video I'm going to explain the same example in more detail, and ask
[9.68s -> 12.60s]  a few more questions about that same example.
[12.60s -> 17.94s]  Here's the question. At the start of every second, a train of 100 bits arrive
[17.94s -> 23.44s]  to a queue at rate 1000 bits per second. The departure rate from the queue is 500
[23.44s -> 28.04s]  bits per second. The queue is served bit by bit, and you can assume the buffer size
[28.04s -> 33.64s]  is infinite. What is the average queue occupancy?
[33.64s -> 39.00s]  The cumulative arrival and departure processes will look like this. First, look at the cumulative
[39.00s -> 45.44s]  arrivals A of t shown in red. In the first one tenth of a second, 100 bits will arrive
[45.44s -> 51.32s]  at rate 1000 bits per second. There are no more arrivals until one second. Then,
[51.32s -> 54.00s]  a new 100 bits arrive.
[54.04s -> 58.92s]  Now let's look at the departure process D of t shown in green. As soon as the first
[58.92s -> 64.92s]  train of bits starts to arrive at rate 1000 bits per second, bits will start departing,
[64.92s -> 69.84s]  because the question says they are served bit by bit. If we had to wait for a whole
[69.84s -> 75.56s]  packet to arrive, then the departure process would not start increasing yet. The bits
[75.56s -> 80.96s]  take 0.2 seconds to depart, because they depart at 500 bits per second, which is
[80.96s -> 86.08s]  half the rate at which new bits arrive. The queue therefore builds up, with a peak after
[86.08s -> 89.40s]  0.1 of a second.
[89.40s -> 94.40s]  To answer the question, let's look at the occupancy of the queue, Q of t, as a function
[94.40s -> 97.80s]  of time.
[97.80s -> 102.16s]  The queue occupancy is the vertical distance between A of t and D of t. It's simply
[102.16s -> 108.84s]  the number of bits that have arrived up until this point minus those that have departed.
[108.84s -> 115.68s]  During the first 0.1 seconds, the queue builds up as new bits arrive, to a peak of 50 bits.
[115.68s -> 122.16s]  During the first 0.2 seconds, the average occupancy is 25 bits. Then the queue drains
[122.16s -> 126.72s]  from 0.1 second to 0.2 seconds until it is empty and all the bits have departed.
[126.72s -> 132.04s]  The queue is empty for 0.8 seconds, and then the same process repeats. We can immediately
[132.04s -> 136.28s]  calculate the time average occupancy of the queue. It spends 0.2 of a second with an
[136.28s -> 142.44s]  average occupancy of 25 bits, and then 0.8 of a second with an occupancy of zero.
[142.44s -> 151.84s]  The time average is therefore 5 bits. We've answered question A.
[151.84s -> 157.84s]  The second question is, what is the average delay of a bit in the queue?
[157.84s -> 162.60s]  Let's look at the evolution of A of t and D of t again.
[162.60s -> 169.04s]  The delay seen by a bit arriving at time t is D of t, little e of t, the horizontal
[169.04s -> 176.24s]  distance between the two lines. The first bit arriving at time 0 experiences no delay,
[176.24s -> 183.12s]  whereas a bit arriving at 0.1 of a second experiences a delay of 0.1 seconds.
[183.12s -> 188.20s]  Notice that no more bits arrive after 0.1 seconds, so it makes no sense to consider
[188.20s -> 193.92s]  the delay of a bit arriving between 0.1 of a second and 1.0 seconds. We are essentially
[193.92s -> 198.44s]  conditioning the probability on a bit arriving, which only happens in the first 0.1 of
[198.44s -> 203.92s]  every second. Therefore, the average delay seen by a bit arriving to the queue is simply
[203.92s -> 212.12s]  0.05 seconds. Question C. Staying with the same queue,
[212.12s -> 218.38s]  the third question is, if the trains of 100 bits arrived at random intervals, one train
[218.38s -> 224.28s]  per second on average, would the average queue occupancy be the same, lower or higher
[224.28s -> 231.76s]  than in part A? The time average occupancy will be higher. When two trains arrived
[231.76s -> 236.20s]  deterministically in part A, they never overlapped, and so there were never bits
[236.20s -> 241.84s]  from two trains in the queue at the same time. But if they arrived randomly, we might
[241.84s -> 245.96s]  have bits from two or more trains in the queue at the same time, pushing up the
[245.96s -> 251.36s]  occupancy and hence the average occupancy. This might be surprising, so let's look
[251.36s -> 258.44s]  at an example to see why this is true. Consider two cases. Case 1 is like part
[258.44s -> 264.04s]  A. We assume the trains arrive randomly, but no two trains ever overlap, just like
[264.04s -> 268.88s]  in part A, they never overlapped. The average queue occupancy would be the same as before,
[268.88s -> 278.12s]  which was 5 bits. As soon as two trains overlap, even once, the average will increase.
[278.12s -> 282.72s]  To see why, consider the example here. The red line shows the queue occupancy of
[282.72s -> 289.16s]  one train, which we assume arrives at time zero. Let's say the second train arrives
[289.16s -> 293.92s]  at time 0.1 second, just when the queue has 50 bits in it, still from the first
[293.92s -> 298.20s]  train. The queue will keep growing, because bits are arriving twice as fast as they
[298.20s -> 306.12s]  are leaving. The queue won't drain until 0.4 seconds. If this happened every two seconds,
[306.12s -> 310.56s]  the arrival rate would be the same as before, but the time average queue occupancy would
[310.56s -> 318.36s]  now be as follows. For 0.4 of a second, the time average occupancy is 50 bits. Then,
[318.36s -> 324.12s]  for 1.6 seconds, it's empty. To get the time average, we divide by 2 seconds. The
[324.16s -> 330.32s]  time average occupancy is 10 bits, which is double what it was before. Why is that?
[330.32s -> 336.12s]  It's because the queue only drains at 500 bits per second, and so not only does
[336.12s -> 341.68s]  it fill to twice as much as before, it also takes twice as long to drain. The
[341.68s -> 346.20s]  triangle showing when the queue is non-empty has four times the area as before.
[346.20s -> 354.00s]  The fourth part of the question is, if the departing bits from the queue are fed
[354.00s -> 358.72s]  into a second identical queue with the same departure rate, what is the average
[358.72s -> 365.52s]  occupancy of the second queue? The second queue will have bits arrive at 500
[365.52s -> 370.12s]  bits per second, and the bits will depart at 500 bits per second. In other
[370.12s -> 373.40s]  words, it will never accumulate bits, and will always be empty.
