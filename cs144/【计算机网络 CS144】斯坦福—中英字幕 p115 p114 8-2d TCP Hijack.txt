# Detected language: en (p=1.00)

[0.00s -> 5.48s]  By now, you've seen several different ways to attack a computer.
[5.48s -> 7.02s]  Pretty scary stuff.
[7.02s -> 13.46s]  We can force the network to broadcast packets, or reroute packets to a malicious server.
[13.46s -> 16.70s]  And in this video, we're going to see another scary example.
[16.70s -> 21.62s]  In this case, Alice and Bob are happily communicating over a TCP connection, and
[21.62s -> 26.06s]  Eve is going to step in, right into the middle of that TCP connection, and hijack
[26.06s -> 28.06s]  it after it's started.
[28.06s -> 32.02s]  She's going to manipulate the data inside the connection, without either side knowing
[32.02s -> 33.74s]  that she's doing it.
[33.74s -> 37.46s]  The attack is pretty tricky, it's more tricky than the other ones, because Eve has
[37.46s -> 42.66s]  to figure out the current state of the TCP connection between Alice and Bob, in order
[42.66s -> 47.50s]  to send data and acts that fall into the right range of sequence numbers, and don't
[47.50s -> 53.18s]  screw up the TCP state of the state machines at both ends of the connection.
[53.18s -> 57.14s]  Let's see how this works.
[57.14s -> 63.30s]  Just as we saw in the SSH man-in-the-middle attack, Eve the attacker is going to broadcast
[63.30s -> 68.54s]  falsified ARP messages over the local area network, causing Alice to think that she should
[68.54s -> 71.18s]  use Eve's MAC address to reach Bob.
[71.18s -> 77.28s]  At the same time, the falsified ARP packets cause Bob to think that he should also
[77.28s -> 80.02s]  use Eve's MAC address to reach Alice.
[80.02s -> 85.30s]  Therefore, all of the TCP traffic between Alice and Bob will actually be routed through
[85.30s -> 86.74s]  Eve.
[86.74s -> 91.60s]  Eve will simply act as a bridge between Alice and Bob, passing TCP requests and responses
[91.60s -> 96.98s]  back and forth, and Eve will look for patterns in the TCP segments, waiting for the chance
[96.98s -> 99.90s]  to hijack and manipulate the connection.
[99.90s -> 104.22s]  Let's take a look in more detail.
[104.22s -> 108.28s]  Just like with the other demos, I'm going to demonstrate the example using the Mininet
[108.28s -> 110.02s]  emulation system.
[110.02s -> 113.82s]  You can easily and safely run this one yourself, on your own computer, and in a minute
[113.82s -> 115.54s]  I'll tell you how.
[115.54s -> 118.78s]  This example was created by Sean Choi, shown here.
[118.78s -> 124.38s]  First, let's verify that under normal conditions, Eve cannot hijack and manipulate
[124.38s -> 126.78s]  TCP connections between Alice and Bob.
[126.78s -> 131.72s]  The type of TCP application we're going to use is HTTP, an application protocol that
[131.72s -> 135.22s]  of course we're all very familiar with by now.
[135.22s -> 141.22s]  Alice is requesting a web page from Bob, and Bob is running a simple HTTP server on
[141.22s -> 146.50s]  his computer and will respond with a static web page from his local file system.
[146.50s -> 152.58s]  As we can see, Alice has received a correct web page with no malicious information.
[152.58s -> 160.18s]  Next, Eve runs an attack in which she sends falsified ARP packets, causing both
[160.18s -> 165.46s]  Alice and Bob to think that they should use Eve's MAC address to reach each other.
[165.46s -> 171.22s]  All traffic meant for Alice and Bob now goes to Eve instead.
[171.22s -> 174.74s]  Ettercap is a nice tool that lets us easily perform this attack.
[174.74s -> 182.30s]  Ettercap also helps us to hijack TCP connections and manipulate what is sent to the receiver.
[182.30s -> 188.22s]  We now turn on ARP spoofing and start sniffing the network using Ettercap.
[188.22s -> 192.70s]  Now we'll send another HTTP request from Alice to Bob.
[192.70s -> 197.82s]  Using some packets as defined in our filter, Eve will capture the packet and manipulate
[197.82s -> 199.86s]  the contents of the web page.
[199.86s -> 203.98s]  We can now see the manipulated pay arriving at Alice.
[203.98s -> 209.34s]  Also, we can see the connection information between Alice and Bob on Ettercap, indicating
[209.34s -> 212.24s]  that eavesdropping is also possible.
[212.24s -> 216.10s]  We have successfully hijacked the TCP connection.
[216.10s -> 220.50s]  If you would like, you can reproduce this demo by following the detailed instructions
[220.50s -> 222.18s]  at the following GitHub location.
